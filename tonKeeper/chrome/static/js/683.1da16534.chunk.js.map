{"version":3,"file":"static/js/683.1da16534.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/state/swap/useSwapOptions.js","../../../packages/uikit/dist/state/swap/useEncodeSwap.js","../../../packages/core/dist/utils/types.js","../../../packages/uikit/dist/state/swap/useCalculatedSwap.js","../../../packages/uikit/dist/components/swap/SwapButton.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapSearchInput.js","../../../packages/uikit/dist/components/swap/tokens-list/ConfirmImportNotification.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensList.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensListNotification.js","../../../packages/uikit/dist/components/swap/SwapTokenSelect.js","../../../packages/uikit/dist/components/swap/SwapAmountInput.js","../../../packages/uikit/dist/components/swap/SwapAmountFiat.js","../../../packages/uikit/dist/components/swap/SwapAmountBalance.js","../../../packages/uikit/dist/components/swap/SwapFromField.js","../../../packages/uikit/dist/components/swap/SwapProviders.js","../../../packages/uikit/dist/components/swap/SwapTransactionInfo.js","../../../packages/uikit/dist/components/swap/SwapRate.js","../../../packages/uikit/dist/components/swap/SwapToField.js","../../../packages/uikit/dist/components/swap/SwapMainForm.js","../../../packages/uikit/node_modules/react-error-boundary/dist/react-error-boundary.esm.js","../../../packages/uikit/dist/components/shared/RadioFlatInput.js","../../../packages/uikit/dist/components/swap/SwapSettingsNotification.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapSettingsButton.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapRefreshButton.js","../../../packages/uikit/dist/pages/swap/SwapMobileNotification.js","../../../packages/uikit/dist/components/Error.js","../../../packages/uikit/dist/state/swap/useSwapAssets.js"],"sourcesContent":["import { useAppSdk } from '../../hooks/appSdk';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nconst defaultSwapOptions = {\n    slippagePercent: 1,\n    maxPriceImpact: 0.3\n};\nexport const useSwapOptions = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_OPTIONS], async () => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        return {\n            slippagePercent: options?.slippagePercent || defaultSwapOptions.slippagePercent,\n            maxPriceImpact: options?.maxPriceImpact || defaultSwapOptions.maxPriceImpact\n        };\n    });\n};\nexport const useMutateSwapOptions = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (newOptions) => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        await sdk.storage.set(AppKey.SWAP_OPTIONS, { ...options, ...newOptions });\n        await client.invalidateQueries([AppKey.SWAP_OPTIONS]);\n    });\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { assertUnreachable } from '@tonkeeper/core/dist/utils/types';\nimport { Address } from '@ton/core';\nimport { useAppContext, useWalletContext } from '../../hooks/appContext';\nimport { useSwapsConfig } from './useSwapsConfig';\nimport BigNumber from 'bignumber.js';\nimport { useSwapOptions } from './useSwapOptions';\nexport function useEncodeSwap() {\n    const { active } = useWalletContext();\n    const { swapService } = useSwapsConfig();\n    const { config } = useAppContext();\n    const { data: swapOpaitons } = useSwapOptions();\n    const referral = config.web_swaps_referral_address;\n    return useMutation(swap => {\n        if (!swapOpaitons) {\n            throw new Error('SwapOptions query was not resolved yet');\n        }\n        return swapService.encodeSwap({\n            swap: swapToProviderSwap(swap),\n            options: {\n                senderAddress: active.rawAddress,\n                slippage: new BigNumber(swapOpaitons.slippagePercent)\n                    .div(100)\n                    .decimalPlaces(5)\n                    .toString(),\n                ...(referral && { referralAddress: Address.parse(referral).toRawString() })\n            }\n        });\n    });\n}\nconst swapToProviderSwap = (swap) => {\n    if (swap.provider === 'stonfi') {\n        return {\n            provider: 'stonfi',\n            stonfiTrade: swap.trade.rawTrade\n        };\n    }\n    if (swap.provider === 'dedust') {\n        return {\n            provider: 'dedust',\n            dedustTrade: swap.trade.rawTrade\n        };\n    }\n    assertUnreachable(swap);\n};\n","export function assertUnreachable(_) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexport function notNullish(x) {\n    return x !== null && x !== undefined;\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { Address } from '@ton/core';\nimport { eqAddresses } from '@tonkeeper/core/dist/utils/address';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useSwapFromAmount, useSwapFromAsset, useSelectedSwap, useSwapToAsset, useIsSwapFormNotCompleted } from './useSwapForm';\nimport { QueryKey } from '../../libs/queryKey';\nimport { unShiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { atom, useAtom } from '../../libs/atom';\nimport { useSwapsConfig } from './useSwapsConfig';\nconst swapAssetsCache = new Map();\nexport const swapProviders = ['stonfi', 'dedust'];\nconst fetchedSwaps$ = atom([]);\nlet calculationId = 0;\nexport function useCalculatedSwap() {\n    const { api } = useAppContext();\n    const [fetchedSwaps, setFetchedSwaps] = useAtom(fetchedSwaps$);\n    const [fromAsset] = useSwapFromAsset();\n    const [toAsset] = useSwapToAsset();\n    const [fromAmountRelative] = useSwapFromAmount();\n    const [_, setSelectedSwap] = useSelectedSwap();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const { swapService } = useSwapsConfig();\n    const query = useQuery({\n        queryKey: [\n            QueryKey.swapCalculate,\n            fromAsset.id,\n            toAsset.id,\n            fromAmountRelative?.shiftedBy(fromAsset.decimals).toFixed(0)\n        ],\n        queryFn: async ({ signal }) => {\n            setFetchedSwaps([]);\n            setSelectedSwap(undefined);\n            calculationId = calculationId + 1;\n            const currentCalulationId = calculationId;\n            if (isNotCompleted) {\n                return [];\n            }\n            addAssetToCache(fromAsset);\n            addAssetToCache(toAsset);\n            const fromAmountWei = unShiftedDecimals(fromAmountRelative, fromAsset.decimals);\n            let totalFetchedSwaps = [];\n            return new Promise((res, rej) => {\n                let fetchedProvidersNumber = 0;\n                swapProviders.forEach(async (provider) => {\n                    try {\n                        const swapPromise = swapService.calculateSwap(toTradeAssetId(fromAsset.address), toTradeAssetId(toAsset.address), fromAmountWei.toFixed(0), provider);\n                        if (signal) {\n                            signal.onabort = () => swapPromise.cancel();\n                        }\n                        const providerSwap = await swapPromise;\n                        const swap = await providerSwapToSwap(providerSwap, api, fromAsset, toAsset);\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        const providerBestSwap = sortSwaps(swap)[0];\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(providerBestSwap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, providerBestSwap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                    catch (e) {\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        console.error(e);\n                        const swap = {\n                            provider,\n                            trade: null\n                        };\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(swap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, swap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                });\n            });\n        },\n        cacheTime: 0\n    });\n    return useMemo(() => ({\n        ...query,\n        fetchedSwaps\n    }), [query, fetchedSwaps]);\n}\nconst toTradeAssetId = (address) => {\n    return isTon(address) ? 'ton' : address.toRawString();\n};\nconst fromTradeAssetId = (address) => {\n    return address === 'ton' ? 'TON' : Address.parse(address);\n};\nconst sortSwaps = (swaps) => {\n    return swaps.slice().sort((a, b) => {\n        if (!a.trade) {\n            return 1;\n        }\n        if (!b.trade) {\n            return -1;\n        }\n        return b.trade.to.weiAmount.comparedTo(a.trade.to.weiAmount);\n    });\n};\nconst providerSwapToSwap = async (providerSwap, api, fromAsset, toAsset) => {\n    const assetsInfo = await getPathAssets(providerSwap.trades, api);\n    if (providerSwap.provider === 'dedust') {\n        if (providerSwap.trades.length === 0) {\n            return [\n                {\n                    provider: 'dedust',\n                    trade: null\n                }\n            ];\n        }\n        return providerSwap.trades.map(t => ({\n            provider: 'dedust',\n            trade: {\n                from: new AssetAmount({\n                    asset: fromAsset,\n                    weiAmount: t.fromAmount\n                }),\n                to: new AssetAmount({\n                    asset: toAsset,\n                    weiAmount: t.toAmount\n                }),\n                path: t.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address)))),\n                blockchainFee: new AssetAmount({\n                    asset: TON_ASSET,\n                    weiAmount: t.blockchainFee\n                }),\n                rawTrade: t.dedustRawTrade\n            }\n        }));\n    }\n    if (providerSwap.provider === 'stonfi') {\n        const trade = providerSwap.trades[0];\n        if (!trade) {\n            return [{ provider: 'stonfi', trade: null }];\n        }\n        return [\n            {\n                provider: 'stonfi',\n                trade: {\n                    from: new AssetAmount({\n                        asset: fromAsset,\n                        weiAmount: trade.fromAmount\n                    }),\n                    to: new AssetAmount({\n                        asset: toAsset,\n                        weiAmount: trade.toAmount\n                    }),\n                    blockchainFee: new AssetAmount({\n                        asset: TON_ASSET,\n                        weiAmount: trade.blockchainFee\n                    }),\n                    rawTrade: trade.stonfiRawTrade,\n                    path: trade.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address))))\n                }\n            }\n        ];\n    }\n    return [];\n};\nconst getPathAssets = async (trades, api) => {\n    const addresses = trades.flatMap(trade => trade.path.map(fromTradeAssetId));\n    return Promise.all(addresses.map(address => getAsset(api, address)));\n};\nconst addAssetToCache = (asset) => {\n    if (!swapAssetsCache.has(asset.address)) {\n        swapAssetsCache.set(asset.address, Promise.resolve(asset));\n    }\n};\nconst getAsset = async (api, address) => {\n    if (isTon(address)) {\n        return TON_ASSET;\n    }\n    if (swapAssetsCache.has(address)) {\n        return swapAssetsCache.get(address);\n    }\n    const tonapi = new JettonsApi(api.tonApiV2);\n    const p = tonapi.getJettonInfo({ accountId: address.toRawString() }).then(response => ({\n        symbol: response.metadata.symbol,\n        decimals: Number(response.metadata.decimals),\n        name: response.metadata.name,\n        blockchain: BLOCKCHAIN_NAME.TON,\n        address,\n        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n        image: response.metadata.image\n    }));\n    swapAssetsCache.set(address, p);\n    return p;\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from '../fields/Button';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useIsSwapFormNotCompleted, useMaxSwapValue, useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useIsActiveWalletLedger } from '../../state/ledger';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { useTranslation } from '../../hooks/translation';\nexport const SwapButton = ({ onClick, isEncodingProcess }) => {\n    const { t } = useTranslation();\n    const [swapAmount] = useSwapFromAmount();\n    const [fromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    const { isFetching, data: calculatedSwaps } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const activeIsLedger = useIsActiveWalletLedger();\n    if (activeIsLedger) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_ledger_not_supported') }));\n    }\n    if (isNotCompleted) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_enter_amount') }));\n    }\n    if (!isFetching && calculatedSwaps?.every(s => !s.trade)) {\n        return (_jsx(Button, { size: \"medium\", disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    if ((isFetching && !selectedSwap?.trade) || !max || priceImpact === undefined || !swapOptions) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, loading: true, children: t('continue') }));\n    }\n    if (!selectedSwap || !selectedSwap.trade) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    const isNotEnoughFunds = swapAmount?.gt(shiftedDecimals(max, fromAsset.decimals));\n    if (isNotEnoughFunds) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_not_enough_funds') }));\n    }\n    const priceImpactTooHigh = priceImpact?.gt(swapOptions.maxPriceImpact);\n    if (priceImpactTooHigh) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_price_impact_too_high') }));\n    }\n    return (_jsx(Button, { size: \"medium\", primary: true, onClick: onClick, loading: isEncodingProcess, children: t('continue') }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { useSwapTokensFilter } from '../../../state/swap/useSwapAssets';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Input } from '../../fields/Input';\nexport const SwapSearchInput = forwardRef(({ className, isDisabled }, ref) => {\n    const { t } = useTranslation();\n    const [value, setValue] = useSwapTokensFilter();\n    return (_jsx(Input, { value: value, onChange: e => setValue(e), ref: ref, disabled: isDisabled, label: t('swap_search'), clearButton: true, className: className, size: \"small\" }));\n});\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { createGlobalStyle, styled } from 'styled-components';\nimport { Body2, Label2 } from '../../Text';\nimport { Button } from '../../fields/Button';\nimport { useTranslation } from '../../../hooks/translation';\nconst ConfirmImportNotificationContent = styled.div `\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nconst DescriptionBlock = styled(Body2) `\n    display: block;\n    margin-top: 4px;\n    color: ${p => p.theme.textSecondary};\n`;\nconst ButtonsBlock = styled.div `\n    width: 100%;\n    display: flex;\n    gap: 8px;\n    margin-top: 24px;\n\n    > * {\n        flex: 1;\n    }\n`;\nconst WrapperStyles = createGlobalStyle `\n      .confirm-import-swap-token-notification {\n        ${p => p.theme.displayType === 'full-width' && 'max-width: 400px;'}\n      }\n    `;\nexport const ConfirmImportNotification = ({ isOpen, onClose, tokenSymbol }) => {\n    const { t } = useTranslation();\n    return (_jsxs(_Fragment, { children: [_jsx(WrapperStyles, {}), _jsx(Notification, { isOpen: isOpen, handleClose: onClose, wrapperClassName: \"confirm-import-swap-token-notification\", children: () => (_jsxs(ConfirmImportNotificationContent, { children: [_jsx(Label2, { children: t('swap_import_token_title').replace('%token%', tokenSymbol) }), _jsx(DescriptionBlock, { children: t('swap_unknown_token_description') }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { primary: true, onClick: () => onClose(false), children: t('cancel') }), _jsx(Button, { secondary: true, onClick: () => onClose(true), children: t('swap_import') })] })] })) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport { Body2, Body3, Label2 } from '../../Text';\nimport { useAddUserCustomSwapAsset, useSwapCustomTokenSearch } from '../../../state/swap/useSwapAssets';\nimport { formatFiatCurrency } from '../../../hooks/balance';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { LinkOutIcon, SpinnerIcon } from '../../Icon';\nimport { ConfirmImportNotification } from './ConfirmImportNotification';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { throttle } from '@tonkeeper/core/dist/utils/common';\nimport { useTranslation } from '../../../hooks/translation';\nconst SwapTokensListWrapper = styled.div `\n    overflow-y: auto;\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: calc(100% - 54px);\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst Divider = styled.div `\n    width: 100%;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nexport const SwapTokensList = ({ walletSwapAssets, onSelect }) => {\n    const [displayingAssets, setDisplayingAssets] = useState(walletSwapAssets.slice(0, 25));\n    const ref = useRef(null);\n    useEffect(() => {\n        setDisplayingAssets(walletSwapAssets.slice(0, 25));\n    }, [walletSwapAssets]);\n    const onScroll = () => {\n        if (!ref?.current) {\n            return;\n        }\n        const scrollHeightLeft = ref.current.scrollHeight - ref.current.clientHeight - ref.current.scrollTop;\n        if (scrollHeightLeft < 300) {\n            setDisplayingAssets(d => walletSwapAssets.slice(0, d.length + 25));\n        }\n    };\n    return (_jsx(SwapTokensListWrapper, { ref: ref, onScroll: throttle(onScroll, 100), children: walletSwapAssets.length ? (displayingAssets.map((swapAsset, index) => (_jsxs(Fragment, { children: [_jsx(TokenListItem, { onClick: () => onSelect(swapAsset.assetAmount.asset), swapAsset: swapAsset }), index !== walletSwapAssets.length - 1 && _jsx(Divider, {})] }, swapAsset.assetAmount.asset.id)))) : (_jsx(TokenNotFound, { onSelect: onSelect })) }));\n};\nconst TokensNotFoundContainer = styled.div `\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${p => p.theme.textSecondary};\n`;\nconst TokenNotFound = ({ onSelect }) => {\n    const { t } = useTranslation();\n    const { data: swapAsset, isFetching } = useSwapCustomTokenSearch();\n    const [isOpened, setIsOpened] = useState(false);\n    const { mutate } = useAddUserCustomSwapAsset();\n    if (isFetching) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    if (!swapAsset) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(Body2, { children: t('swap_tokens_not_found') }) }));\n    }\n    const onClose = (confirmed) => {\n        setIsOpened(false);\n        if (confirmed) {\n            mutate(swapAsset.assetAmount.asset);\n            onSelect(swapAsset.assetAmount.asset);\n        }\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(ConfirmImportNotification, { isOpen: isOpened, onClose: onClose, tokenSymbol: swapAsset.assetAmount.asset.symbol }), _jsx(TokenListItem, { onClick: () => setIsOpened(true), swapAsset: swapAsset })] }));\n};\nconst TokenListItemWrapper = styled.button `\n    border: none;\n    width: 100%;\n    padding: 8px 1rem;\n    display: flex;\n    gap: 12px;\n    background-color: transparent;\n\n    transition: background-color 0.15s ease-in-out;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n        background-color: ${p => p.theme.backgroundContent};\n    }\n`;\nconst TokenImage = styled.img `\n    height: 40px;\n    width: 40px;\n    border-radius: 100%;\n`;\nconst TokenInfo = styled.div `\n    display: flex;\n    flex-direction: column;\n    width: calc(100% - 52px);\n`;\nconst TokenInfoLine = styled.div `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n\n    > *:first-child {\n        display: block;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    > *:nth-child(3) {\n        margin-left: auto;\n    }\n`;\nconst LinkOutIconWrapper = styled.div `\n    cursor: pointer;\n    &:hover {\n        > svg {\n            color: ${p => p.theme.iconSecondary};\n        }\n    }\n`;\nconst TokenInfoSecondLine = styled(TokenInfoLine) `\n    color: ${p => p.theme.textSecondary};\n\n    > *:nth-child(2) {\n        margin-left: auto;\n    }\n`;\nconst BalanceLabel = styled(Label2) `\n    color: ${p => (p.isZero ? p.theme.textTertiary : p.theme.textPrimary)};\n`;\nconst TokenListItem = ({ swapAsset, onClick }) => {\n    const isZeroBalance = swapAsset.assetAmount.relativeAmount.isZero();\n    const { fiat } = useAppContext();\n    const sdk = useAppSdk();\n    const onOpenExplorer = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let explorerUrl;\n        if (isTon(swapAsset.assetAmount.asset.address)) {\n            explorerUrl = 'https://tonviewer.com/price';\n        }\n        else {\n            explorerUrl = `https://tonviewer.com/${swapAsset.assetAmount.asset.address.toString({\n                urlSafe: true\n            })}`;\n        }\n        sdk.openPage(explorerUrl);\n    };\n    return (_jsxs(TokenListItemWrapper, { onClick: onClick, children: [_jsx(TokenImage, { src: swapAsset.assetAmount.asset.image }), _jsxs(TokenInfo, { children: [_jsxs(TokenInfoLine, { children: [_jsx(Label2, { children: swapAsset.assetAmount.asset.symbol }), _jsx(LinkOutIconWrapper, { onClick: onOpenExplorer, children: _jsx(LinkOutIcon, {}) }), _jsx(BalanceLabel, { isZero: isZeroBalance, children: swapAsset.assetAmount.stringRelativeAmount })] }), _jsxs(TokenInfoSecondLine, { children: [_jsx(Body3, { children: swapAsset.assetAmount.asset.name }), !isZeroBalance && (_jsx(Body3, { children: formatFiatCurrency(fiat, swapAsset.fiatAmount) }))] })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { atom, useAtom } from '../../../libs/atom';\nimport { createGlobalStyle, css, styled } from 'styled-components';\nimport { SwapSearchInput } from './SwapSearchInput';\nimport { SwapTokensList } from './SwapTokensList';\nimport { useSwapTokensFilter, useWalletFilteredSwapAssets } from '../../../state/swap/useSwapAssets';\nimport { SpinnerIcon } from '../../Icon';\nimport { useTranslation } from '../../../hooks/translation';\nconst swapTokensListOpened$ = atom(undefined);\nexport const useOpenSwapTokensList = (onClose) => {\n    const [_, setIsOpen] = useAtom(swapTokensListOpened$);\n    return useCallback(() => setIsOpen(() => ({\n        onClose\n    })), [setIsOpen, onClose]);\n};\nconst WrapperStyles = createGlobalStyle `\n  .tokens-list-notification-wrapper .dialog-content {\n    padding-bottom: 0;\n  }\n`;\nexport const SwapTokensListNotification = () => {\n    const { t } = useTranslation();\n    const [onSelect, setIsOpen] = useAtom(swapTokensListOpened$);\n    const onClose = (asset) => {\n        onSelect?.onClose(asset);\n        setIsOpen(undefined);\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(WrapperStyles, {}), _jsx(Notification, { isOpen: !!onSelect, handleClose: () => onClose(undefined), title: t('swap_tokens'), footer: _jsx(\"div\", {}), wrapperClassName: \"tokens-list-notification-wrapper\", children: () => _jsx(SwapTokensListContent, { onSelect: onClose }) })] }));\n};\nconst SwapSearchInputStyled = styled(SwapSearchInput) `\n    margin-bottom: 1rem;\n`;\nconst SwapTokensListContentWrapper = styled.div `\n    ${p => p.theme.displayType === 'full-width'\n    ? css `\n                  height: 580px;\n              `\n    : css `\n                  height: calc(var(--app-height) - 6rem);\n              `}\n`;\nconst Divider = styled.div `\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nconst SpinnerContainer = styled.div `\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 300px;\n`;\nconst SwapTokensListContent = ({ onSelect }) => {\n    const walletSwapAssets = useWalletFilteredSwapAssets();\n    const inputRef = useRef();\n    const [_, setFilter] = useSwapTokensFilter();\n    useEffect(() => {\n        setTimeout(() => inputRef?.current?.focus(), 100);\n        return () => setFilter('');\n    }, []);\n    return (_jsxs(SwapTokensListContentWrapper, { children: [_jsx(SwapSearchInputStyled, { ref: inputRef, isDisabled: !walletSwapAssets }), _jsx(Divider, {}), walletSwapAssets ? (_jsx(SwapTokensList, { onSelect: onSelect, walletSwapAssets: walletSwapAssets })) : (_jsx(SpinnerContainer, { children: _jsx(SpinnerIcon, {}) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { Label2 } from '../Text';\nimport { SwitchIcon } from '../Icon';\nimport { useOpenSwapTokensList } from './tokens-list/SwapTokensListNotification';\nconst TokenSymbol = styled(Label2) `\n    display: block;\n    max-width: 80px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 0;\n    color: ${p => p.theme.textPrimary};\n\n    transition: color 0.15s ease-in-out;\n`;\nconst SelectContainer = styled.button `\n    border: none;\n    display: flex;\n    align-items: center;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n    gap: 6px;\n    height: 36px;\n    width: fit-content;\n\n    &:hover {\n        > ${TokenSymbol} {\n            color: ${p => p.theme.textSecondary};\n        }\n    }\n`;\nconst TokenImage = styled.img `\n    height: 24px;\n    width: 24px;\n    border-radius: 100%;\n    flex-shrink: 0;\n`;\nexport const SwapTokenSelect = ({ token, onTokenChange, className }) => {\n    const onClose = useCallback((t) => t && onTokenChange(t), [onTokenChange]);\n    const openList = useOpenSwapTokensList(onClose);\n    return (_jsxs(SelectContainer, { className: className, onClick: openList, children: [_jsx(TokenImage, { src: token.image }), _jsx(TokenSymbol, { children: token.symbol }), _jsx(SwitchIcon, {})] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Num2Class } from '../Text';\nimport BigNumber from 'bignumber.js';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { replaceTypedDecimalSeparator, seeIfValueValid } from '../transfer/amountView/AmountViewUI';\nimport { formatNumberValue, formatSendValue, isNumeric, removeGroupSeparator } from '@tonkeeper/core/dist/utils/send';\nconst AmountInputWrapper = styled.input `\n    border: none;\n    background: none;\n    text-align: right;\n    outline: none;\n    width: 30px;\n    color: ${p => (p.isErrored ? p.theme.accentRed : p.theme.textPrimary)};\n    font-family: inherit;\n\n    ${Num2Class}\n\n    &::placeholder {\n        color: ${p => p.theme.textTertiary};\n    }\n`;\nexport const SwapAmountInput = ({ value, onChange, decimals, className, isErrored }) => {\n    const [input, setInput] = useState('');\n    const onInput = (newValue) => {\n        let inputValue = replaceTypedDecimalSeparator(newValue);\n        if (!inputValue) {\n            setInput('');\n            onChange(undefined);\n            return;\n        }\n        if (!seeIfValueValid(inputValue, decimals)) {\n            return;\n        }\n        if (isNumeric(inputValue)) {\n            if (!inputValue.endsWith(getDecimalSeparator())) {\n                const bnInput = new BigNumber(removeGroupSeparator(inputValue).replace(getDecimalSeparator(), '.'));\n                const prevBnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                if (!bnInput.eq(prevBnInput)) {\n                    onChange(bnInput);\n                    inputValue = formatSendValue(inputValue);\n                }\n            }\n            setInput(inputValue);\n        }\n    };\n    useEffect(() => {\n        if (!value) {\n            setInput('');\n        }\n        else {\n            if (!input.endsWith(getDecimalSeparator())) {\n                try {\n                    const bnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                    if (!bnInput.eq(value)) {\n                        setInput(formatNumberValue(value));\n                    }\n                }\n                catch (_) {\n                    // ignore\n                }\n            }\n        }\n    }, [value]);\n    const decimalSeparator = getDecimalSeparator();\n    return (_jsx(AmountInputWrapper, { value: input, onChange: e => onInput(e.target.value), placeholder: `0${decimalSeparator}00`, className: className, isErrored: isErrored, inputMode: \"decimal\" }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport BigNumber from 'bignumber.js';\nimport { useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { formatFiatCurrency } from '../../hooks/balance';\nimport { useAppContext } from '../../hooks/appContext';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n    cursor: default;\n`;\nexport const SwapAmountFiat = ({ amount, asset }) => {\n    const { fiat } = useAppContext();\n    const { data: rate, isLoading } = useRate(tonAssetAddressToString(asset.address));\n    if (!amount) {\n        return _jsx(\"div\", {});\n    }\n    if (!isLoading && !rate?.prices) {\n        return _jsx(\"div\", {});\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const inFiat = formatFiatCurrency(fiat, new BigNumber(rate.prices).multipliedBy(amount));\n    return _jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", inFiat] });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3, Label3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { useFormatCoinValue } from '../../hooks/balance';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { useAssetWeiBalance } from '../../state/home';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { useTranslation } from '../../hooks/translation';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst BalanceContainer = styled.div `\n    display: flex;\n    height: 16px;\n    align-items: center;\n`;\nconst MaxButton = styled.button `\n    border: none;\n    background: none;\n    color: ${p => p.theme.accentBlue};\n    height: fit-content;\n    margin-left: 0.5rem;\n\n    > * {\n        display: block;\n        height: fit-content;\n    }\n\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\nexport const SwapFromAmountBalance = () => {\n    const [_, setSwapAmount] = useSwapFromAmount();\n    const [asset] = useSwapFromAsset();\n    const { data: balance } = useMaxSwapValue();\n    return (_jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals, onMax: () => setSwapAmount(shiftedDecimals(balance, asset.decimals)) }));\n};\nexport const SwapToAmountBalance = () => {\n    const [asset] = useSwapToAsset();\n    const balance = useAssetWeiBalance({ address: asset.address, blockchain: BLOCKCHAIN_NAME.TON });\n    return _jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals });\n};\nconst SwapAmountContent = ({ balance, decimals = 0, onMax }) => {\n    const { t } = useTranslation();\n    const format = useFormatCoinValue();\n    return (_jsxs(BalanceContainer, { children: [_jsxs(Body3Styled, { children: [t('swap_balance'), \":\\u00A0\"] }), balance ? (_jsx(Body3Styled, { children: format(balance, decimals) })) : (_jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" })), onMax && (_jsx(MaxButton, { disabled: !balance || balance.isZero(), onClick: onMax, children: _jsx(Label3, { children: t('swap_max') }) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { SwapAmountInput } from './SwapAmountInput';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapFromAmountBalance } from './SwapAmountBalance';\nimport { debounce } from '@tonkeeper/core/dist/utils/common';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    position: relative;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > * {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst SwapAmountInputStyled = styled(SwapAmountInput) `\n    flex: 1;\n`;\nexport const SwapFromField = ({ children }) => {\n    const { t } = useTranslation();\n    const [swapAmount, setSwapAmount] = useSwapFromAmount();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_send') }), _jsx(SwapFromAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: fromAsset, onTokenChange: setFromAsset }), _jsx(SwapAmountInputStyled, { value: swapAmount, onChange: debounce(setSwapAmount), decimals: fromAsset.decimals, isErrored: !!max &&\n                            !!swapAmount &&\n                            swapAmount.gt(shiftedDecimals(max, fromAsset.decimals)) })] }), _jsx(FieldFooter, { children: _jsx(SwapAmountFiat, { amount: swapAmount, asset: fromAsset }) }), children] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { useIsSwapFormNotCompleted, useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { Skeleton } from '../shared/Skeleton';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapProvidersContainer = styled.div `\n    padding: 0 12px 12px;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    height: fit-content;\n`;\nconst Heading = styled.div `\n    color: ${p => p.theme.textSecondary};\n    padding: 10px 0;\n    display: flex;\n    align-items: center;\n    > * {\n        cursor: default;\n    }\n`;\nexport const SwapProviders = () => {\n    const { t } = useTranslation();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    if (isNotCompleted) {\n        return _jsx(\"div\", {});\n    }\n    return (_jsxs(SwapProvidersContainer, { children: [_jsx(Heading, { children: _jsx(Body3, { children: t('swap_provider') }) }), _jsx(ProviderCard, { provider: \"stonfi\" }), _jsx(ProviderCard, { provider: \"dedust\" })] }));\n};\nconst ProviderCardStyled = styled.div `\n    height: 56px;\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    border: 1px solid ${p => (p.isActive ? p.theme.accentBlue : p.theme.separatorCommon)};\n    padding: 0 12px;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    cursor: ${p => (p.isDisabled ? 'not-allowed' : 'pointer')};\n\n    transition: border-color 0.15s ease-in-out;\n\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;\nconst ProviderImage = styled.img `\n    width: 24px;\n    height: 24px;\n    border-radius: 6px;\n`;\nconst ProviderLabelContainer = styled.div `\n    padding: 10px 0;\n    display: flex;\n    flex-direction: column;\n`;\nconst ProviderPriceContainer = styled.div `\n    padding: 10px 0;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst providersConfig = {\n    stonfi: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/stonfi.png',\n        label: 'STON.fi'\n    },\n    dedust: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/dedust.png',\n        label: 'DeDust'\n    }\n};\nconst ProviderCard = ({ provider }) => {\n    const { t } = useTranslation();\n    const [selectedSwap, setSelectedSwap] = useSelectedSwap();\n    const isActive = selectedSwap?.provider === provider;\n    const { fetchedSwaps, isFetching } = useCalculatedSwap();\n    const swap = fetchedSwaps.find(t => t.provider === provider);\n    const trade = swap?.trade;\n    const [toAsset] = useSwapToAsset();\n    const { data: rate, isFetching: isRateFetching } = useRate(tonAssetAddressToString(toAsset.address));\n    const isBest = fetchedSwaps.findIndex(t => t.provider === provider) === 0 && !!swap?.trade;\n    const providerConfig = providersConfig[provider];\n    const { fiatAmount } = useFormatFiat(rate, trade?.to.relativeAmount || new BigNumber(0));\n    return (_jsxs(ProviderCardStyled, { isDisabled: !swap || !trade, isActive: isActive, onClick: () => swap && trade && setSelectedSwap(swap), children: [_jsx(ProviderImage, { src: providerConfig.imageUrl }), _jsxs(ProviderLabelContainer, { children: [_jsx(Label2, { children: providerConfig.label }), isBest && _jsx(Body3Styled, { children: t('swap_best_price') })] }), _jsx(ProviderPriceContainer, { children: !isFetching && !trade ? (_jsx(Body3Styled, { children: t('swap_trade_is_not_available') })) : (_jsxs(_Fragment, { children: [trade ? (_jsx(Label2, { children: trade.to.stringAssetRelativeAmount })) : (_jsx(Skeleton, { width: \"60px\", height: \"14px\", margin: \"3px 0\" })), rate && trade ? (_jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", fiatAmount] })) : isRateFetching ? (_jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" })) : (_jsx(\"div\", {}))] })) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { css, styled } from 'styled-components';\nimport { Body2Class, Body3 } from '../Text';\nimport { IconButton } from '../fields/IconButton';\nimport { useRef, useState } from 'react';\nimport { ChevronDownIcon, InfoCircleIcon } from '../Icon';\nimport { Skeleton } from '../shared/Skeleton';\nimport { priceImpactStatus, useIsSwapFormNotCompleted, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { useTranslation } from '../../hooks/translation';\nimport { BorderSmallResponsive } from '../shared/Styles';\nconst TxInfoContainer = styled.div ``;\nconst TxInfoHeader = styled.div `\n    cursor: pointer;\n    padding: 4px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${p => p.theme.textSecondary};\n\n    svg {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst AccordionContent = styled.div `\n    transform: translateY(-100%);\n    visibility: hidden;\n    transition: transform 0.2s ease-in-out, visibility 0.2s ease-in-out;\n`;\nconst AccordionAnimation = styled.div `\n    display: grid;\n    grid-template-rows: ${p => (p.isOpened ? '1fr' : '0fr')};\n    overflow: ${p => (p.animationCompleted && p.isOpened ? 'visible' : 'hidden')};\n    transition: grid-template-rows 0.2s ease-in-out;\n\n    ${AccordionContent} {\n        ${p => p.isOpened &&\n    css `\n                transform: translateY(0);\n                visibility: visible;\n            `}\n    }\n`;\nconst AccordionBody = styled.div `\n    min-height: 0;\n`;\nconst AccordionButton = styled(IconButton) `\n    transform: ${p => (p.isOpened ? 'rotate(180deg)' : 'rotate(0deg)')};\n    transition: transform 0.2s ease-in-out;\n    border: none;\n`;\nconst InfoRow = styled.div `\n    position: relative;\n    display: flex;\n    padding: 4px 0;\n    gap: 6px;\n    align-items: center;\n\n    > * {\n        cursor: default;\n    }\n`;\nconst Tooltip = styled.div `\n    pointer-events: none;\n    transform: translate3d(0, -10px, 0);\n    z-index: 100;\n    left: 0;\n    right: 0;\n    transition: all 0.15s ease-in-out;\n    opacity: 0;\n    position: absolute;\n    background-color: ${p => p.theme.backgroundContentTint};\n    padding: 8px 12px;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n\n    ${p => p.placement === 'top'\n    ? css `\n                  transform: translate3d(0, 10px, 0);\n                  bottom: 30px;\n              `\n    : css `\n                  transform: translate3d(0, -10px, 0);\n                  top: 30px;\n              `}\n`;\nconst TooltipHost = styled.div `\n    cursor: pointer;\n\n    &:hover + ${Tooltip} {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n    }\n`;\nconst InfoRowLabel = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst InfoRowRight = styled(Body3) `\n    margin-left: auto;\n`;\nconst InfoSkeleton = () => {\n    return _jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" });\n};\nconst PriceImpact = styled(Body3) `\n    color: ${p => p.status === 'low'\n    ? p.theme.accentGreen\n    : p.status === 'medium' || p.status === 'unknown'\n        ? p.theme.accentOrange\n        : p.theme.accentRed};\n`;\nexport const SwapTransactionInfo = () => {\n    const { t } = useTranslation();\n    const [isOpened, setIsOpened] = useState(false);\n    const [isAnimationCompleted, setIsAnimationCompleted] = useState(false);\n    const timeoutRef = useRef();\n    const { isFetching } = useCalculatedSwap();\n    const [swap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const trade = swap?.trade;\n    if ((!isFetching && !trade) || isNotCompleted) {\n        return null;\n    }\n    const onToggleAccordion = () => {\n        clearTimeout(timeoutRef.current);\n        if (isOpened) {\n            setIsAnimationCompleted(false);\n            setIsOpened(false);\n        }\n        else {\n            setIsOpened(true);\n            timeoutRef.current = setTimeout(() => setIsAnimationCompleted(true), 400);\n        }\n    };\n    return (_jsxs(TxInfoContainer, { children: [_jsxs(TxInfoHeader, { onClick: onToggleAccordion, children: [_jsx(Body3, { children: t('swap_tx_info') }), _jsx(AccordionButton, { transparent: true, isOpened: isOpened, children: _jsx(ChevronDownIcon, {}) })] }), _jsx(AccordionAnimation, { isOpened: isOpened, animationCompleted: isAnimationCompleted, children: _jsx(AccordionBody, { children: _jsxs(AccordionContent, { children: [_jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_price_impact') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_price_impact_tooltip') }), _jsx(InfoRowRight, { children: priceImpact === undefined || !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(PriceImpact, { status: priceImpactStatus(priceImpact), children: priceImpact ? (_jsxs(_Fragment, { children: [\"\\u2248\\u00A0\", `${priceImpact\n                                                        .multipliedBy(100)\n                                                        .decimalPlaces(2)\n                                                        .toString()\n                                                        .replace('.', getDecimalSeparator())\n                                                        .replace('-', '+')}%`] })) : (t('swap_unknown_price_impact')) })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_minimum_received') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_minimum_received_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", new AssetAmount({\n                                                    weiAmount: trade.to.weiAmount\n                                                        .multipliedBy(100 - swapOptions.slippagePercent)\n                                                        .div(100),\n                                                    asset: trade.to.asset\n                                                }).stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_slippage') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_slippage_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [swapOptions.slippagePercent, \"%\"] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_blockchain_fee') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_blockchain_fee_tooltip') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", trade.blockchainFee.stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_route') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(Body3, { children: trade.path.map(ta => ta.symbol).join(' → ') })) })] })] }) }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { css, styled } from 'styled-components';\nimport { priceImpactStatus, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nconst Body3Styled = styled(Body3) `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    color: ${p => p.impact === 'medium'\n    ? p.theme.accentOrange\n    : p.impact === 'high'\n        ? p.theme.accentRed\n        : p.theme.textSecondary};\n    cursor: pointer;\n    transition: color 0.15s ease-in-out;\n\n    &:hover {\n        ${p => p.impact !== 'medium' &&\n    p.impact !== 'high' &&\n    css `\n                color: ${p.theme.textPrimary};\n            `};\n    }\n`;\nconst WarnIcon = () => {\n    return (_jsx(\"svg\", { width: \"12\", height: \"12\", viewBox: \"0 0 12 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.18144 1.65C4.63413 0.86592 4.86047 0.473881 5.11842 0.286474C5.64415 -0.0954914 6.35604 -0.0954914 6.88177 0.286474C7.13971 0.473881 7.36606 0.86592 7.81875 1.65L11.1096 7.35L11.1097 7.35001C11.5623 8.13408 11.7887 8.52612 11.822 8.84321C11.8899 9.48949 11.534 10.106 10.9403 10.3703C10.6491 10.5 10.1964 10.5 9.29099 10.5H2.7092C1.80382 10.5 1.35113 10.5 1.05986 10.3703C0.466204 10.106 0.110258 9.48949 0.178184 8.84321C0.211512 8.52612 0.437856 8.13408 0.890544 7.35L4.18144 1.65ZM5.1001 8.1C5.1001 7.60294 5.50304 7.2 6.0001 7.2C6.49715 7.2 6.9001 7.60294 6.9001 8.1C6.9001 8.59706 6.49715 9 6.0001 9C5.50304 9 5.1001 8.59706 5.1001 8.1ZM6.00002 2C5.53718 2 5.16822 2.38674 5.18997 2.84906L5.31946 5.60072C5.33656 5.96414 5.63619 6.25 6.00002 6.25C6.36384 6.25 6.66347 5.96414 6.68057 5.60072L6.81006 2.84906C6.83182 2.38674 6.46285 2 6.00002 2Z\", fill: \"currentColor\" }) }));\n};\nexport const SwapRate = () => {\n    const [measureUnit, setMeasureUnit] = useState('from');\n    const [selectedSwap] = useSelectedSwap();\n    const { isFetching } = useCalculatedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const isLoading = (isFetching && !selectedSwap?.trade) || priceImpact === undefined;\n    const isHidden = !isFetching && !selectedSwap?.trade;\n    if (isHidden) {\n        return null;\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"100px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const trade = selectedSwap.trade;\n    const leftPart = measureUnit === 'from' ? trade.from : trade.to;\n    const rightPart = measureUnit === 'from' ? trade.to : trade.from;\n    if (leftPart.relativeAmount.isZero()) {\n        return null;\n    }\n    const rightPartAmount = rightPart.relativeAmount.div(leftPart.relativeAmount);\n    const rightPartAssetAmount = AssetAmount.fromRelativeAmount({\n        amount: rightPartAmount,\n        asset: rightPart.asset\n    });\n    const impact = priceImpactStatus(priceImpact);\n    return (_jsxs(Body3Styled, { impact: impact, onClick: () => setMeasureUnit(s => (s === 'from' ? 'to' : 'from')), children: [\"1\\u00A0\", leftPart.asset.symbol, \"\\u00A0\\u2248\\u00A0\", rightPartAssetAmount.stringAssetRelativeAmount, (impact === 'medium' || impact === 'high') && _jsx(WarnIcon, {})] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Num2 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapToAmountBalance } from './SwapAmountBalance';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { Skeleton } from '../shared/Skeleton';\nimport { SwapTransactionInfo } from './SwapTransactionInfo';\nimport { SwapRate } from './SwapRate';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst ToAmountField = styled.div `\n    margin-left: auto;\n    overflow: auto;\n\n    cursor: default;\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > :last-child {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst Num2Tertiary = styled(Num2) `\n    color: ${p => p.theme.textTertiary};\n`;\nexport const SwapToField = () => {\n    const { t } = useTranslation();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const { isFetching } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_receive') }), _jsx(SwapToAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: toAsset, onTokenChange: setToAsset }), _jsx(ToAmountField, { children: !selectedSwap?.trade && isFetching ? (_jsx(Skeleton, { width: \"100px\", height: \"28px\", margin: \"4px 0\" })) : selectedSwap?.trade ? (_jsx(Num2, { children: selectedSwap.trade.to.stringRelativeAmount })) : (_jsx(Num2Tertiary, { children: \"0\" })) })] }), _jsxs(FieldFooter, { children: [_jsx(SwapRate, {}), _jsx(SwapAmountFiat, { amount: selectedSwap?.trade?.to.relativeAmount, asset: toAsset })] }), _jsx(SwapTransactionInfo, {})] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Address } from '@ton/core';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { styled, useTheme } from 'styled-components';\nimport { AppRoute } from '../../libs/routes';\nimport { useEncodeSwap } from '../../state/swap/useEncodeSwap';\nimport { useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { SwapIcon } from '../Icon';\nimport { TonTransactionNotification } from '../connect/TonTransactionNotification';\nimport { IconButton } from '../fields/IconButton';\nimport { SwapButton } from './SwapButton';\nimport { SwapFromField } from './SwapFromField';\nimport { SwapProviders } from './SwapProviders';\nimport { SwapToField } from './SwapToField';\nimport { SwapTokensListNotification } from './tokens-list/SwapTokensListNotification';\nconst MainFormWrapper = styled.div `\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n`;\nconst ChangeIconStyled = styled(IconButton) `\n    height: 32px;\n    width: 32px;\n    position: absolute;\n    right: calc(50% - 16px);\n    bottom: -20px;\n    border: none;\n\n    background-color: ${props => props.theme.buttonTertiaryBackground};\n\n    > svg {\n        transition: color 0.15s ease-in-out;\n    }\n\n    &:hover {\n        background-color: ${props => props.theme.buttonTertiaryBackgroundHighlighted};\n        > svg {\n            color: ${props => props.theme.iconPrimary};\n        }\n    }\n`;\nexport const SwapMainForm = ({ className }) => {\n    const theme = useTheme();\n    const { isLoading, mutateAsync: encode } = useEncodeSwap();\n    const [modalParams, setModalParams] = useState(null);\n    const [selectedSwap] = useSelectedSwap();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const [_, setFromAmount] = useSwapFromAmount();\n    const navigate = useNavigate();\n    const [__, setIsMobileSwapOpen] = useSwapMobileNotification();\n    const onConfirm = async () => {\n        const result = await encode(selectedSwap);\n        setModalParams({\n            valid_until: (Date.now() + 10 * 60 * 1000) / 1000,\n            messages: [\n                {\n                    address: Address.parse(result.to).toString({ bounceable: true }),\n                    amount: result.value,\n                    payload: result.body\n                }\n            ]\n        });\n    };\n    const onChangeFields = () => {\n        setFromAsset(toAsset);\n        setToAsset(fromAsset);\n        if (selectedSwap?.trade) {\n            setFromAmount(selectedSwap.trade.to.relativeAmount);\n        }\n    };\n    const onCloseConfirmModal = (boc) => {\n        setModalParams(null);\n        if (boc) {\n            navigate(AppRoute.activity);\n            setIsMobileSwapOpen(false);\n        }\n    };\n    return (_jsxs(MainFormWrapper, { className: className, children: [_jsx(SwapFromField, { children: _jsx(ChangeIconStyled, { onClick: onChangeFields, children: _jsx(SwapIcon, {}) }) }), _jsx(SwapToField, {}), theme.displayType === 'compact' && _jsx(SwapProviders, {}), _jsx(SwapButton, { onClick: onConfirm, isEncodingProcess: isLoading || !!modalParams }), _jsx(TonTransactionNotification, { handleClose: onCloseConfirmModal, params: modalParams, waitInvalidation: true }), _jsx(SwapTokensListNotification, {})] }));\n};\n","'use client';\nimport { createContext, Component, createElement, isValidElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback === null || isValidElement(fallback)) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { BorderSmallResponsive } from './Styles';\nimport { Body2Class } from '../Text';\nimport { forwardRef, useId } from 'react';\nconst LabelStyled = styled.label `\n    cursor: pointer;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n    box-sizing: border-box;\n\n    text-align: center;\n\n    padding: 8px 12px;\n\n    background: ${p => p.theme.fieldBackground};\n    border: 1px solid transparent;\n    transition: border-color 0.15s ease-in-out;\n`;\nconst InputStyled = styled.input `\n    display: none;\n\n    &:checked + ${LabelStyled} {\n        border: 1px solid ${p => p.theme.accentBlue};\n    }\n`;\nexport const RadioFlatInput = forwardRef((props, ref) => {\n    const fallbackId = useId();\n    const id = props.id || fallbackId;\n    const { className, children, ...rest } = props;\n    return (_jsxs(_Fragment, { children: [_jsx(InputStyled, { type: \"radio\", ref: ref, id: id, ...rest }), _jsx(LabelStyled, { className: className, htmlFor: id, children: children })] }));\n});\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { RadioFlatInput } from '../shared/RadioFlatInput';\nimport { Notification } from '../Notification';\nimport { Button } from '../fields/Button';\nimport { useMutateSwapOptions, useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { SpinnerIcon } from '../Icon';\nimport { useTranslation } from '../../hooks/translation';\nexport const SwapSettingsNotification = ({ isOpen, onClose }) => {\n    const { t } = useTranslation();\n    return (_jsx(_Fragment, { children: _jsx(Notification, { isOpen: isOpen, handleClose: onClose, title: t('swap_settings'), children: () => _jsx(SwapSettingsNotificationContent, { onClose: onClose }) }) }));\n};\nconst SlippageToleranceTextWrapper = styled.div `\n    padding-bottom: 10px;\n\n    > * {\n        display: block;\n        cursor: default;\n    }\n\n    > ${Body3} {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst SlippageOptionsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    margin-bottom: 2rem;\n`;\nconst RadioFlatInputStyled = styled(RadioFlatInput) `\n    height: 36px;\n    flex: 1;\n`;\nconst ButtonsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    > * {\n        flex: 1;\n    }\n`;\nconst slippagePercentValues = [0.5, 1, 3, 5];\nconst defaultPercent = slippagePercentValues[1];\nconst LoadingContainer = styled.div `\n    height: 200px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst SwapSettingsNotificationContent = ({ onClose }) => {\n    const { t } = useTranslation();\n    const { data: swapOptions } = useSwapOptions();\n    const { mutate } = useMutateSwapOptions();\n    const [checkedRadioValue, setCheckedRadioValue] = useState();\n    useLayoutEffect(() => {\n        if (swapOptions?.slippagePercent) {\n            if (slippagePercentValues.includes(swapOptions?.slippagePercent)) {\n                setCheckedRadioValue(swapOptions?.slippagePercent);\n            }\n            else {\n                setCheckedRadioValue(defaultPercent);\n                mutate({ slippagePercent: defaultPercent });\n            }\n        }\n    }, [swapOptions?.slippagePercent]);\n    if (!swapOptions) {\n        return (_jsx(LoadingContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    const onSave = () => {\n        mutate({ slippagePercent: checkedRadioValue });\n        onClose?.();\n    };\n    return (_jsxs(_Fragment, { children: [_jsxs(SlippageToleranceTextWrapper, { children: [_jsx(Label2, { children: t('swap_slippage') }), _jsx(Body3, { children: t('swap_slippage_description') })] }), _jsx(SlippageOptionsContainer, { children: slippagePercentValues.map(value => (_jsxs(RadioFlatInputStyled, { name: \"slippage-percent\", value: value, checked: checkedRadioValue === value, onChange: () => setCheckedRadioValue(value), children: [value, \"%\"] }, value))) }), _jsxs(ButtonsContainer, { children: [_jsx(Button, { secondary: true, onClick: onClose, children: t('cancel') }), _jsx(Button, { primary: true, disabled: checkedRadioValue === swapOptions.slippagePercent, onClick: onSave, children: t('save') })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { SlidersIcon } from '../../Icon';\nimport { SwapSettingsNotification } from '../SwapSettingsNotification';\nimport { useState } from 'react';\nexport const SwapSettingsButton = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (_jsxs(_Fragment, { children: [_jsx(IconButtonTransparentBackground, { onClick: () => setIsOpen(true), children: _jsx(SlidersIcon, {}) }), _jsx(SwapSettingsNotification, { isOpen: isOpen, onClose: () => setIsOpen(false) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { RefreshIcon, RefreshIconAnimated } from '../../Icon';\nimport { useCalculatedSwap } from '../../../state/swap/useCalculatedSwap';\nimport { useEffect, useState } from 'react';\nlet isRefetchCalled = false;\nexport const SwapRefreshButton = () => {\n    const REFETCH_INTERVAL = 15000;\n    const { refetch, isFetching } = useCalculatedSwap();\n    const [isCounting, setIsCounting] = useState(false);\n    useEffect(() => {\n        isRefetchCalled = false;\n        if (isFetching) {\n            setIsCounting(false);\n        }\n        else {\n            setIsCounting(true);\n            const timeutId = setTimeout(() => {\n                // prevent double refresh from possible two component instances\n                if (isRefetchCalled) {\n                    return;\n                }\n                refetch();\n                isRefetchCalled = true;\n            }, REFETCH_INTERVAL);\n            return () => clearTimeout(timeutId);\n        }\n    }, [isFetching]);\n    return (_jsx(IconButtonTransparentBackground, { onClick: () => refetch(), children: isCounting ? _jsx(RefreshIconAnimated, {}) : _jsx(RefreshIcon, {}) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Label2 } from '../../components/Text';\nimport { SwapMainForm } from '../../components/swap/SwapMainForm';\nimport { styled } from 'styled-components';\nimport { Notification } from '../../components/Notification';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { fallbackRenderOver } from '../../components/Error';\nimport { SwapSettingsButton } from '../../components/swap/icon-buttons/SwapSettingsButton';\nimport { SwapRefreshButton } from '../../components/swap/icon-buttons/SwapRefreshButton';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapMobileNotification = () => {\n    const [isOpen, setIsOpen] = useSwapMobileNotification();\n    return (_jsx(ErrorBoundary, { fallbackRender: fallbackRenderOver('Failed to display Swap page'), children: _jsx(Notification, { isOpen: isOpen, handleClose: () => setIsOpen(false), title: _jsx(NotificationHeader, {}), children: () => _jsx(NotificationContent, {}) }) }));\n};\nconst NotificationHeaderContainer = styled.div `\n    position: relative;\n`;\nconst HeaderButtons = styled.div `\n    display: flex;\n`;\nconst HeaderLabel = styled(Label2) `\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 5rem;\n    right: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: transparent;\n`;\nconst NotificationHeader = () => {\n    const { t } = useTranslation();\n    return (_jsxs(NotificationHeaderContainer, { children: [_jsxs(HeaderButtons, { children: [_jsx(SwapRefreshButton, {}), _jsx(SwapSettingsButton, {})] }), _jsx(HeaderLabel, { children: t('wallet_swap') })] }));\n};\nconst SwapPageWrapper = styled.div `\n    overflow-y: auto;\n    min-height: calc(var(--app-height) - 7rem);\n`;\nconst NotificationContent = () => {\n    return (_jsx(SwapPageWrapper, { children: _jsx(SwapMainForm, {}) }));\n};\nexport default SwapMobileNotification;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function fallbackRenderOver(location) {\n    return ({ error }) => {\n        return (_jsxs(\"div\", { role: \"alert\", children: [_jsx(\"p\", { children: location }), _jsx(\"p\", { children: \"Something went wrong:\" }), _jsx(\"pre\", { style: { color: 'red' }, children: error.message })] }));\n    };\n}\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Address } from '@ton/core';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { BLOCKCHAIN_NAME, CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { isTon, tonAssetAddressFromString, tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport BigNumber from 'bignumber.js';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { atom, useAtom } from '../../libs/atom';\nimport { QueryKey } from '../../libs/queryKey';\nimport { useAssets } from '../home';\nimport { useJettonList } from '../jetton';\nimport { useRate } from '../rates';\nimport { useSwapsConfig } from './useSwapsConfig';\nexport function useAllSwapAssets() {\n    const { swapService } = useSwapsConfig();\n    const { data: customAssets } = useUserCustomSwapAssets();\n    return useQuery({\n        queryKey: [QueryKey.swapAllAssets, customAssets],\n        queryFn: async () => {\n            try {\n                const assets = await swapService.swapAssets();\n                const fetchedAssets = assets\n                    .map(asset => {\n                    const address = asset.address === 'ton' ? 'TON' : Address.parse(asset.address);\n                    return {\n                        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n                        symbol: asset.symbol,\n                        decimals: asset.decimals,\n                        name: asset.name,\n                        image: asset.image,\n                        blockchain: BLOCKCHAIN_NAME.TON,\n                        address\n                    };\n                })\n                    .filter(asset => !(customAssets || []).some(ca => ca.id === asset.id));\n                return fetchedAssets.concat(customAssets || []);\n            }\n            catch (e) {\n                console.error(e);\n                return [];\n            }\n        },\n        enabled: !!customAssets\n    });\n}\nconst swapTokensFilter = atom('');\nexport function useSwapTokensFilter() {\n    return useAtom(swapTokensFilter);\n}\nexport function useWalletSwapAssets() {\n    const [walletAssetsData] = useAssets();\n    const { data: allAssets } = useAllSwapAssets();\n    const { data: tonRate } = useRate(CryptoCurrency.TON);\n    const { fiat } = useAppContext();\n    return useQuery({\n        queryKey: [QueryKey.swapWalletAssets, allAssets, walletAssetsData, tonRate, fiat],\n        queryFn: async () => {\n            if (!walletAssetsData || !allAssets || !tonRate) {\n                return [];\n            }\n            const assetsAmounts = allAssets.map(asset => {\n                if (isTon(asset.address)) {\n                    return {\n                        assetAmount: new AssetAmount({\n                            asset,\n                            weiAmount: walletAssetsData.ton.info.balance\n                        }),\n                        fiatAmount: shiftedDecimals(new BigNumber(walletAssetsData.ton.info.balance)).multipliedBy(tonRate.prices)\n                    };\n                }\n                const balance = walletAssetsData.ton.jettons.balances.find(j => Address.parse(j.jetton.address).equals(asset.address));\n                return {\n                    assetAmount: new AssetAmount({\n                        asset,\n                        weiAmount: balance?.balance || 0\n                    }),\n                    fiatAmount: shiftedDecimals(new BigNumber(balance?.balance || 0), asset.decimals).multipliedBy(new BigNumber(balance?.price?.prices?.[fiat] || 0))\n                };\n            });\n            assetsAmounts.sort((a, b) => {\n                if (a.fiatAmount.isZero() && b.fiatAmount.isZero()) {\n                    return b.assetAmount.weiAmount.comparedTo(a.assetAmount.weiAmount);\n                }\n                return b.fiatAmount.comparedTo(a.fiatAmount);\n            });\n            return assetsAmounts;\n        },\n        enabled: !!walletAssetsData && !!allAssets && !!tonRate\n    });\n}\nexport const useWalletFilteredSwapAssets = () => {\n    const [filter] = useSwapTokensFilter();\n    const { data: walletSwapAssets } = useWalletSwapAssets();\n    return useMemo(() => {\n        if (!walletSwapAssets) {\n            return undefined;\n        }\n        return walletSwapAssets.filter(swapAsset => {\n            if (!filter) {\n                return true;\n            }\n            if (seeIfValidTonAddress(filter)) {\n                return Address.parse(filter).equals(swapAsset.assetAmount.asset.address);\n            }\n            const upperCaseFilter = filter.toUpperCase();\n            if (swapAsset.assetAmount.asset.symbol.toUpperCase().includes(upperCaseFilter) ||\n                swapAsset.assetAmount.asset.name?.toUpperCase().includes(upperCaseFilter)) {\n                return true;\n            }\n        });\n    }, [filter, walletSwapAssets]);\n};\nexport const useSwapCustomTokenSearch = () => {\n    const [filter] = useSwapTokensFilter();\n    const isAddress = seeIfValidTonAddress(filter);\n    const { api, fiat } = useAppContext();\n    const { data: jettons } = useJettonList();\n    return useQuery({\n        queryKey: [QueryKey.swapCustomToken, filter, jettons, fiat],\n        queryFn: async () => {\n            if (!isAddress) {\n                return null;\n            }\n            try {\n                const address = Address.parse(filter);\n                const response = await new JettonsApi(api.tonApiV2).getJettonInfo({\n                    accountId: address.toRawString()\n                });\n                const tonAsset = {\n                    address,\n                    image: response.metadata.image,\n                    blockchain: BLOCKCHAIN_NAME.TON,\n                    name: response.metadata.name,\n                    symbol: response.metadata.symbol,\n                    decimals: Number(response.metadata.decimals),\n                    id: packAssetId(BLOCKCHAIN_NAME.TON, address)\n                };\n                const jb = jettons?.balances.find(j => Address.parse(j.jetton.address).equals(address));\n                const assetAmount = new AssetAmount({\n                    asset: tonAsset,\n                    weiAmount: jb?.balance || new BigNumber(0)\n                });\n                return {\n                    assetAmount,\n                    fiatAmount: shiftedDecimals(new BigNumber(jb?.balance || 0), tonAsset.decimals).multipliedBy(new BigNumber(jb?.price?.prices?.[fiat] || 0))\n                };\n            }\n            catch (e) {\n                console.error(e);\n                return null;\n            }\n        },\n        enabled: isAddress && !!jettons\n    });\n};\nexport const useUserCustomSwapAssets = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_CUSTOM_ASSETS], async () => {\n        const assetsSerialized = await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS);\n        return (assetsSerialized?.map(s => ({\n            ...s,\n            blockchain: s.blockchain,\n            address: tonAssetAddressFromString(s.address),\n            id: packAssetId(s.blockchain, s.address)\n        })) || []);\n    });\n};\nexport const useAddUserCustomSwapAsset = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (asset) => {\n        const current = (await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS)) || [];\n        await sdk.storage.set(AppKey.SWAP_CUSTOM_ASSETS, [\n            ...current,\n            { ...asset, address: tonAssetAddressToString(asset.address) }\n        ]);\n        await client.invalidateQueries([AppKey.SWAP_CUSTOM_ASSETS]);\n    });\n};\n"],"names":["defaultSwapOptions","useSwapOptions","sdk","useAppSdk","useQuery","AppKey","SWAP_OPTIONS","async","options","storage","get","slippagePercent","maxPriceImpact","swapToProviderSwap","swap","provider","stonfiTrade","trade","rawTrade","dedustTrade","_","Error","assertUnreachable","swapAssetsCache","Map","swapProviders","fetchedSwaps$","atom","calculationId","useCalculatedSwap","api","useAppContext","fetchedSwaps","setFetchedSwaps","useAtom","fromAsset","useSwapFromAsset","toAsset","useSwapToAsset","fromAmountRelative","useSwapFromAmount","setSelectedSwap","useSelectedSwap","isNotCompleted","useIsSwapFormNotCompleted","swapService","useSwapsConfig","query","queryKey","QueryKey","swapCalculate","id","shiftedBy","decimals","toFixed","queryFn","signal","_ref","undefined","currentCalulationId","addAssetToCache","fromAmountWei","unShiftedDecimals","totalFetchedSwaps","Promise","res","rej","fetchedProvidersNumber","forEach","swapPromise","calculateSwap","toTradeAssetId","address","onabort","cancel","providerSwap","providerSwapToSwap","providerBestSwap","sortSwaps","concat","s","length","e","console","error","cacheTime","useMemo","isTon","toRawString","fromTradeAssetId","Address","parse","swaps","slice","sort","a","b","to","weiAmount","comparedTo","assetsInfo","getPathAssets","trades","map","t","from","AssetAmount","asset","fromAmount","toAmount","path","find","eqAddresses","blockchainFee","TON_ASSET","dedustRawTrade","stonfiRawTrade","addresses","flatMap","all","getAsset","has","set","resolve","p","JettonsApi","tonApiV2","getJettonInfo","accountId","then","response","symbol","metadata","Number","name","blockchain","BLOCKCHAIN_NAME","TON","packAssetId","image","SwapButton","onClick","isEncodingProcess","useTranslation","swapAmount","data","max","useMaxSwapValue","isFetching","calculatedSwaps","selectedSwap","priceImpact","useSwapPriceImpact","swapOptions","useIsActiveWalletLedger","_jsx","Button","size","secondary","disabled","children","every","loading","gt","shiftedDecimals","primary","SwapSearchInput","forwardRef","ref","className","isDisabled","value","setValue","useSwapTokensFilter","Input","onChange","label","clearButton","ConfirmImportNotificationContent","styled","div","_templateObject","_taggedTemplateLiteral","DescriptionBlock","Body2","_templateObject2","theme","textSecondary","ButtonsBlock","_templateObject3","WrapperStyles","createGlobalStyle","_templateObject4","displayType","ConfirmImportNotification","isOpen","onClose","tokenSymbol","_jsxs","_Fragment","Notification","handleClose","wrapperClassName","Label2","replace","SwapTokensListWrapper","Divider","separatorCommon","SwapTokensList","walletSwapAssets","onSelect","displayingAssets","setDisplayingAssets","useState","useRef","useEffect","onScroll","throttle","current","scrollHeight","clientHeight","scrollTop","d","swapAsset","index","Fragment","TokenListItem","assetAmount","TokenNotFound","TokensNotFoundContainer","_ref2","useSwapCustomTokenSearch","isOpened","setIsOpened","mutate","useAddUserCustomSwapAsset","SpinnerIcon","confirmed","TokenListItemWrapper","button","backgroundContent","TokenImage","img","_templateObject5","TokenInfo","_templateObject6","TokenInfoLine","_templateObject7","LinkOutIconWrapper","_templateObject8","iconSecondary","TokenInfoSecondLine","_templateObject9","BalanceLabel","_templateObject10","isZero","textTertiary","textPrimary","_ref3","isZeroBalance","relativeAmount","fiat","src","explorerUrl","preventDefault","stopPropagation","toString","urlSafe","openPage","LinkOutIcon","stringRelativeAmount","Body3","formatFiatCurrency","fiatAmount","swapTokensListOpened$","SwapTokensListNotification","setIsOpen","title","footer","SwapTokensListContent","SwapSearchInputStyled","SwapTokensListContentWrapper","css","SpinnerContainer","useWalletFilteredSwapAssets","inputRef","setFilter","setTimeout","_inputRef$current","focus","TokenSymbol","SelectContainer","SwapTokenSelect","token","onTokenChange","openList","useCallback","useOpenSwapTokensList","SwitchIcon","AmountInputWrapper","input","isErrored","accentRed","Num2Class","Body3Styled","SwapAmountFiat","amount","rate","isLoading","useRate","tonAssetAddressToString","prices","Skeleton","width","height","margin","inFiat","BigNumber","multipliedBy","BalanceContainer","MaxButton","accentBlue","SwapFromAmountBalance","setSwapAmount","balance","SwapAmountContent","onMax","SwapToAmountBalance","useAssetWeiBalance","format","useFormatCoinValue","Label3","FiledContainerStyled","corner2xSmall","cornerSmall","FiledHeader","FieldBody","FieldFooter","SwapTokenSelectStyled","SwapAmountInputStyled","setInput","endsWith","getDecimalSeparator","removeGroupSeparator","eq","formatNumberValue","decimalSeparator","newValue","inputValue","replaceTypedDecimalSeparator","seeIfValueValid","isNumeric","bnInput","prevBnInput","formatSendValue","onInput","target","placeholder","inputMode","SwapFromField","setFromAsset","debounce","SwapProvidersContainer","Heading","SwapProviders","ProviderCard","ProviderCardStyled","isActive","ProviderImage","ProviderLabelContainer","ProviderPriceContainer","providersConfig","stonfi","imageUrl","dedust","isRateFetching","isBest","findIndex","providerConfig","useFormatFiat","stringAssetRelativeAmount","TxInfoContainer","TxInfoHeader","AccordionContent","AccordionAnimation","animationCompleted","AccordionBody","AccordionButton","IconButton","InfoRow","Tooltip","backgroundContentTint","BorderSmallResponsive","Body2Class","placement","_templateObject11","TooltipHost","_templateObject12","InfoRowLabel","_templateObject13","InfoRowRight","_templateObject14","InfoSkeleton","PriceImpact","_templateObject15","status","accentGreen","accentOrange","SwapTransactionInfo","isAnimationCompleted","setIsAnimationCompleted","timeoutRef","onToggleAccordion","clearTimeout","transparent","ChevronDownIcon","InfoCircleIcon","priceImpactStatus","decimalPlaces","ta","join","impact","WarnIcon","viewBox","fill","xmlns","fillRule","clipRule","SwapRate","measureUnit","setMeasureUnit","leftPart","rightPart","rightPartAmount","rightPartAssetAmount","fromRelativeAmount","ToAmountField","Num2Tertiary","Num2","SwapToField","_selectedSwap$trade","setToAsset","MainFormWrapper","ChangeIconStyled","props","buttonTertiaryBackground","buttonTertiaryBackgroundHighlighted","iconPrimary","SwapMainForm","useTheme","mutateAsync","encode","active","useWalletContext","config","swapOpaitons","referral","web_swaps_referral_address","useMutation","encodeSwap","senderAddress","rawAddress","slippage","referralAddress","useEncodeSwap","modalParams","setModalParams","setFromAmount","navigate","useNavigate","__","setIsMobileSwapOpen","useSwapMobileNotification","onChangeFields","SwapIcon","result","valid_until","Date","now","messages","bounceable","payload","body","TonTransactionNotification","boc","AppRoute","activity","params","waitInvalidation","ErrorBoundaryContext","createContext","initialState","didCatch","ErrorBoundary","Component","constructor","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","Array","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","some","item","Object","is","hasArrayChanged","next","prev","render","fallbackRender","FallbackComponent","fallback","childToRender","createElement","isValidElement","Provider","LabelStyled","fieldBackground","InputStyled","RadioFlatInput","fallbackId","useId","rest","type","htmlFor","SwapSettingsNotification","SwapSettingsNotificationContent","SlippageToleranceTextWrapper","SlippageOptionsContainer","RadioFlatInputStyled","ButtonsContainer","slippagePercentValues","defaultPercent","LoadingContainer","useMutateSwapOptions","client","useQueryClient","newOptions","invalidateQueries","checkedRadioValue","setCheckedRadioValue","useLayoutEffect","includes","checked","onSave","SwapSettingsButton","IconButtonTransparentBackground","SlidersIcon","isRefetchCalled","SwapRefreshButton","refetch","isCounting","setIsCounting","timeutId","RefreshIconAnimated","RefreshIcon","NotificationHeaderContainer","HeaderButtons","HeaderLabel","NotificationHeader","SwapPageWrapper","NotificationContent","SwapMobileNotification","location","role","style","color","message","useAllSwapAssets","customAssets","useUserCustomSwapAssets","swapAllAssets","assets","swapAssets","filter","ca","enabled","swapTokensFilter","walletAssetsData","useAssets","allAssets","tonRate","CryptoCurrency","swapWalletAssets","assetsAmounts","_balance$price","ton","jettons","balances","j","jetton","equals","price","useWalletSwapAssets","_swapAsset$assetAmoun","seeIfValidTonAddress","upperCaseFilter","toUpperCase","isAddress","useJettonList","swapCustomToken","_jb$price","tonAsset","jb","SWAP_CUSTOM_ASSETS","assetsSerialized","tonAssetAddressFromString"],"sourceRoot":""}