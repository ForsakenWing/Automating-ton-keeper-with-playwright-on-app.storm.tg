{"version":3,"file":"static/js/504.520c6295.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/transfer/nft/Common.js","../../../packages/uikit/dist/components/transfer/nft/ConfirmNftView.js","../../../packages/uikit/dist/components/transfer/nft/hooks.js","../../../packages/uikit/dist/components/transfer/nft/SendNftNotification.js","../../../packages/uikit/node_modules/react-transition-group/esm/utils/ChildMapping.js","../../../packages/uikit/node_modules/react-transition-group/esm/TransitionGroup.js","../../../packages/uikit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatAddress, toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport { useWalletContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { ChevronLeftIcon } from '../../Icon';\nimport { ListBlock, ListItem, ListItemPayload } from '../../List';\nimport { NotificationCancelButton, NotificationTitleBlock } from '../../Notification';\nimport { Label1 } from '../../Text';\nimport { RoundedButton } from '../../fields/RoundedButton';\nimport { Label } from '../common';\nexport const ConfirmHeaderBlock = ({ onBack, onClose }) => {\n    return (_jsxs(NotificationTitleBlock, { children: [_jsx(RoundedButton, { onClick: onBack, children: _jsx(ChevronLeftIcon, {}) }), _jsx(NotificationCancelButton, { handleClose: onClose })] }));\n};\nexport const NftDetailsBlock = ({ nftItem }) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const wallet = useWalletContext();\n    return (_jsxs(ListBlock, { fullWidth: true, children: [nftItem.collection && (_jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.collection.address, wallet.network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_collection_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.collection.address, wallet.network, true)) })] }) })), _jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.address, wallet.network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_item_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.address, wallet.network, true)) })] }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { estimateNftTransfer, sendNftTransfer } from '@tonkeeper/core/dist/service/transfer/nftService';\nimport { useState } from 'react';\nimport { useAppContext, useWalletContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Gap } from '../../Layout';\nimport { ListBlock } from '../../List';\nimport { FullHeightBlock } from '../../Notification';\nimport { notifyError } from '../common';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useTransactionAnalytics } from '../../../hooks/amplitude';\nimport { QueryKey } from '../../../libs/queryKey';\nimport { getSigner } from '../../../state/mnemonic';\nimport { useCheckTouchId } from '../../../state/password';\nimport { Image, ImageMock, Info, SendingTitle, Title } from '../Confirm';\nimport { ConfirmViewContext, ConfirmViewDetailsComment, ConfirmViewDetailsFee, ConfirmViewDetailsRecipient } from '../ConfirmView';\nimport { NftDetailsBlock } from './Common';\nconst assetAmount = new AssetAmount({\n    asset: TON_ASSET,\n    weiAmount: 0\n});\nconst useNftTransferEstimation = (nftItem, data) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const wallet = useWalletContext();\n    const client = useQueryClient();\n    return useQuery([QueryKey.estimate, data?.address], async () => {\n        try {\n            const payload = await estimateNftTransfer(api, wallet, data, nftItem);\n            const fee = new AssetAmount({\n                asset: TON_ASSET,\n                weiAmount: payload.event.extra * -1\n            });\n            return { fee, payload };\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n            throw e;\n        }\n    }, { enabled: data != null });\n};\nconst useSendNft = (recipient, nftItem, fee) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const wallet = useWalletContext();\n    const client = useQueryClient();\n    const track2 = useTransactionAnalytics();\n    const { mutateAsync: checkTouchId } = useCheckTouchId();\n    return useMutation(async () => {\n        if (!fee)\n            return false;\n        const signer = await getSigner(sdk, wallet.publicKey, checkTouchId).catch(() => null);\n        if (signer === null)\n            return false;\n        track2('send-nft');\n        try {\n            await sendNftTransfer(api, wallet, recipient, nftItem, fee, signer);\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n        }\n        await client.invalidateQueries([wallet.active.rawAddress]);\n        await client.invalidateQueries();\n        return true;\n    });\n};\nexport const ConfirmNftView = ({ recipient, onClose, nftItem, HeaderBlock, MainButton }) => {\n    const { standalone } = useAppContext();\n    const [done, setDone] = useState(false);\n    const { t } = useTranslation();\n    const estimation = useNftTransferEstimation(nftItem, recipient);\n    const { mutateAsync, isLoading, error, reset } = useSendNft(recipient, nftItem, estimation.data?.payload);\n    const image = nftItem.previews?.find(item => item.resolution === '100x100');\n    const handleSubmit = async () => {\n        if (isLoading)\n            return false;\n        try {\n            reset();\n            const isDone = await mutateAsync();\n            if (isDone) {\n                setDone(true);\n                setTimeout(onClose, 2000);\n            }\n            return isDone;\n        }\n        catch (err) {\n            console.error(err);\n            return false;\n        }\n    };\n    const onSubmit = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    return (_jsx(ConfirmViewContext.Provider, { value: {\n            recipient,\n            assetAmount,\n            estimation,\n            formState: { done, isLoading, error },\n            onClose: () => onClose(),\n            onBack: () => { },\n            handleSubmit\n        }, children: _jsxs(FullHeightBlock, { onSubmit: onSubmit, standalone: standalone, children: [_jsx(HeaderBlock, {}), _jsxs(Info, { children: [image ? _jsx(Image, { src: image.url }) : _jsx(ImageMock, {}), _jsx(SendingTitle, { children: nftItem.dns ?? nftItem.metadata.name }), _jsx(Title, { children: t('txActions_signRaw_types_nftItemTransfer') })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ConfirmViewDetailsRecipient, {}), _jsx(ConfirmViewDetailsFee, {}), _jsx(ConfirmViewDetailsComment, {})] }), _jsx(NftDetailsBlock, { nftItem: nftItem }), _jsx(Gap, {}), _jsx(MainButton, {})] }) }));\n};\n","import { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { checkWalletPositiveBalanceOrDie } from '@tonkeeper/core/dist/service/transfer/common';\nimport { AccountsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { useAppContext, useWalletContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { notifyError } from '../common';\nexport const useMinimalBalance = () => {\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const walletState = useWalletContext();\n    const { t } = useTranslation();\n    const client = useQueryClient();\n    return useMutation(async () => {\n        const wallet = await new AccountsApi(api.tonApiV2).getAccount({\n            accountId: walletState.active.rawAddress\n        });\n        try {\n            checkWalletPositiveBalanceOrDie(wallet);\n        }\n        catch (e) {\n            await notifyError(client, sdk, t, e);\n        }\n    });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { parseTonTransfer } from '@tonkeeper/core/dist/service/deeplinkingService';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Notification } from '../../Notification';\nimport { ConfirmViewButtons } from '../ConfirmView';\nimport { RecipientView, useGetToAccount } from '../RecipientView';\nimport { ConfirmMainButton, MainButton, RecipientHeaderBlock, Wrapper, childFactoryCreator, duration } from '../common';\nimport { ConfirmHeaderBlock } from './Common';\nimport { ConfirmNftView } from './ConfirmNftView';\nimport { useMinimalBalance } from './hooks';\nconst SendContent = ({ nftItem, onClose }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { standalone, extension } = useAppContext();\n    const recipientRef = useRef(null);\n    const confirmRef = useRef(null);\n    const [right, setRight] = useState(true);\n    const [recipient, setRecipient] = useState();\n    const { mutateAsync: getAccountAsync } = useGetToAccount();\n    const { mutateAsync: checkBalanceAsync, isLoading: isChecking } = useMinimalBalance();\n    const onRecipient = async (data) => {\n        await checkBalanceAsync();\n        setRight(true);\n        setRecipient(data);\n    };\n    const backToRecipient = useCallback(() => {\n        setRight(false);\n        setRecipient(value => (value ? { ...value, done: false } : undefined));\n    }, [setRecipient]);\n    const [state, nodeRef] = (() => {\n        if (!recipient || !recipient.done) {\n            return ['recipient', recipientRef];\n        }\n        return ['confirm', confirmRef];\n    })();\n    const processRecipient = useCallback(async ({ address }) => {\n        const item = { address: address };\n        const toAccount = await getAccountAsync(item);\n        setRecipient({\n            address: { ...item, blockchain: BLOCKCHAIN_NAME.TON },\n            toAccount,\n            comment: '',\n            done: true\n        });\n    }, [setRecipient, getAccountAsync]);\n    const onScan = async (signature) => {\n        const param = parseTonTransfer({ url: signature });\n        if (param === null) {\n            return sdk.uiEvents.emit('copy', {\n                method: 'copy',\n                params: t('Unexpected_QR_Code')\n            });\n        }\n        else {\n            await processRecipient(param);\n        }\n    };\n    return (_jsx(Wrapper, { standalone: standalone, extension: extension, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(right), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                    setTimeout(done, duration);\n                }, children: _jsxs(\"div\", { ref: nodeRef, children: [state === 'recipient' && (_jsx(RecipientView, { data: recipient, setRecipient: onRecipient, onScan: onScan, isExternalLoading: isChecking, acceptBlockchains: [BLOCKCHAIN_NAME.TON], MainButton: MainButton, HeaderBlock: () => (_jsx(RecipientHeaderBlock, { title: t('nft_transfer_title'), onClose: onClose })) })), state === 'confirm' && (_jsx(ConfirmNftView, { onClose: onClose, recipient: recipient, nftItem: nftItem, MainButton: () => (_jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton })), HeaderBlock: () => (_jsx(ConfirmHeaderBlock, { onBack: backToRecipient, onClose: onClose })) }))] }) }, state) }) }));\n};\nconst SendNftNotification = () => {\n    const sdk = useAppSdk();\n    const [nftItem, setNft] = useState();\n    const onClose = useCallback(() => {\n        setNft(undefined);\n    }, [setNft]);\n    useEffect(() => {\n        const handler = (options) => {\n            setNft(options.params);\n        };\n        sdk.uiEvents.on('transferNft', handler);\n        return () => {\n            sdk.uiEvents.off('transferNft', handler);\n        };\n    }, []);\n    const Content = useCallback(() => {\n        if (!nftItem)\n            return undefined;\n        return _jsx(SendContent, { onClose: onClose, nftItem: nftItem });\n    }, [nftItem, onClose]);\n    return (_jsx(Notification, { isOpen: !!nftItem, handleClose: onClose, hideButton: true, backShadow: true, children: Content }));\n};\nexport default SendNftNotification;\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["ConfirmHeaderBlock","_ref","onBack","onClose","_jsxs","NotificationTitleBlock","children","_jsx","RoundedButton","onClick","ChevronLeftIcon","NotificationCancelButton","handleClose","NftDetailsBlock","_ref2","nftItem","t","useTranslation","sdk","useAppSdk","wallet","useWalletContext","ListBlock","fullWidth","collection","ListItem","copyToClipboard","formatAddress","address","network","ListItemPayload","Label","Label1","toShortValue","assetAmount","AssetAmount","asset","TON_ASSET","weiAmount","ConfirmNftView","_estimation$data","_nftItem$previews","_nftItem$dns","recipient","HeaderBlock","MainButton","standalone","useAppContext","done","setDone","useState","estimation","useNftTransferEstimation","data","api","client","useQueryClient","useQuery","QueryKey","estimate","async","payload","estimateNftTransfer","fee","event","extra","e","notifyError","enabled","mutateAsync","isLoading","error","reset","useSendNft","track2","useTransactionAnalytics","checkTouchId","useCheckTouchId","useMutation","signer","getSigner","publicKey","catch","sendNftTransfer","invalidateQueries","active","rawAddress","image","previews","find","item","resolution","handleSubmit","isDone","setTimeout","err","console","ConfirmViewContext","Provider","value","formState","FullHeightBlock","onSubmit","stopPropagation","preventDefault","Info","Image","src","url","ImageMock","SendingTitle","dns","metadata","name","Title","margin","ConfirmViewDetailsRecipient","ConfirmViewDetailsFee","ConfirmViewDetailsComment","Gap","SendContent","extension","recipientRef","useRef","confirmRef","right","setRight","setRecipient","getAccountAsync","useGetToAccount","checkBalanceAsync","isChecking","useMinimalBalance","walletState","AccountsApi","tonApiV2","getAccount","accountId","checkWalletPositiveBalanceOrDie","backToRecipient","useCallback","undefined","state","nodeRef","processRecipient","toAccount","blockchain","BLOCKCHAIN_NAME","TON","comment","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","duration","ref","RecipientView","onScan","param","parseTonTransfer","signature","uiEvents","emit","method","params","isExternalLoading","acceptBlockchains","RecipientHeaderBlock","title","ConfirmViewButtons","ConfirmMainButton","SendNftNotification","setNft","useEffect","handler","options","on","off","Content","Notification","isOpen","hideButton","backShadow","getChildMapping","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps"],"sourceRoot":""}