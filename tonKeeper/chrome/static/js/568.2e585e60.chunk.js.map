{"version":3,"file":"static/js/568.2e585e60.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/hooks/keystoneScanner.js","../../../packages/uikit/dist/components/create/CreateAuth.js","../../../packages/uikit/dist/components/create/WalletName.js","../../../packages/uikit/dist/components/lottie/LottieIcons.js","../../../packages/uikit/dist/pages/import/Password.js","../../../packages/uikit/dist/pages/import/Subscribe.js","../../../packages/uikit/dist/state/subscribe.js","../../../packages/uikit/dist/pages/import/Create.js","../../../packages/uikit/dist/pages/import/Import.js","../../../packages/uikit/dist/pages/import/Keystone.js","../../../packages/uikit/dist/pages/import/Ledger.js","../../../packages/uikit/dist/pages/import/Signer.js","../../../packages/uikit/dist/state/signer.js","../../../packages/uikit/dist/hooks/scanner.js","../../../packages/uikit/dist/pages/import/index.js","../../../packages/uikit/node_modules/@ngraveio/bc-ur/src/errors.ts","../../../packages/uikit/node_modules/@ngraveio/bc-ur/src/fountainDecoder.ts","../../../packages/uikit/node_modules/@ngraveio/bc-ur/src/ur.ts","../../../packages/uikit/node_modules/@ngraveio/bc-ur/src/urDecoder.ts"],"sourcesContent":["import URDecoder from '@ngraveio/bc-ur/dist/urDecoder';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppSdk } from './appSdk';\nexport const useKeystoneScanner = (initScan, onSubmit) => {\n    const sdk = useAppSdk();\n    const [scanId, setScanId] = useState(initScan);\n    const urDecoder = useMemo(() => new URDecoder(), []);\n    const requestQrCode = useCallback(() => {\n        if (scanId) {\n            sdk.uiEvents.emit('scan', {\n                method: 'scan',\n                id: scanId,\n                params: undefined\n            });\n        }\n    }, [sdk, scanId]);\n    useEffect(() => {\n        requestQrCode();\n    }, [requestQrCode]);\n    useEffect(() => {\n        const handler = (options) => {\n            if (options.id === scanId) {\n                // keystoneSdk.\n                urDecoder.receivePart(options.params);\n                if (urDecoder.isComplete()) {\n                    onSubmit(urDecoder.resultUR());\n                }\n                else {\n                    requestQrCode();\n                }\n            }\n        };\n        sdk.uiEvents.on('response', handler);\n        return () => {\n            sdk.uiEvents.off('response', handler);\n        };\n    }, [sdk, scanId, onSubmit, requestQrCode]);\n    return useCallback(() => {\n        setScanId(Date.now());\n    }, [setScanId]);\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMutation } from '@tanstack/react-query';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { MinPasswordLength } from '@tonkeeper/core/dist/service/accountService';\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { CenterContainer } from '../Layout';\nimport { H2 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { Input } from '../fields/Input';\nconst Block = styled.form `\n    display: flex;\n    text-align: center;\n    gap: 1rem;\n    flex-direction: column;\n`;\nconst useSetNoneAuthMutation = () => {\n    const sdk = useAppSdk();\n    return useMutation(async () => {\n        const state = {\n            kind: 'none'\n        };\n        await sdk.storage.set(AppKey.GLOBAL_AUTH_STATE, state);\n    });\n};\nconst SelectAuthType = ({ onSelect, isLoading }) => {\n    const { t } = useTranslation();\n    return (_jsxs(Block, { children: [_jsx(Button, { size: \"large\", fullWidth: true, onClick: () => onSelect('none'), loading: isLoading, children: t('Without_authentication') }), _jsx(Button, { size: \"large\", fullWidth: true, primary: true, onClick: () => onSelect('password'), disabled: isLoading, children: t('Password') })] }));\n};\nconst useCreatePassword = () => {\n    const sdk = useAppSdk();\n    return useMutation(async ({ password, confirm }) => {\n        if (password.length < MinPasswordLength) {\n            sdk.hapticNotification('error');\n            return 'password';\n        }\n        if (password !== confirm) {\n            sdk.hapticNotification('error');\n            return 'confirm';\n        }\n        const state = {\n            kind: 'password'\n        };\n        await sdk.storage.set(AppKey.GLOBAL_AUTH_STATE, state);\n    });\n};\nconst FillPassword = ({ afterCreate, isLoading }) => {\n    const { t } = useTranslation();\n    const { mutateAsync, isLoading: isCreating, reset } = useCreatePassword();\n    const ref = useRef(null);\n    const [error, setError] = useState(undefined);\n    const [password, setPassword] = useState('');\n    const [confirm, setConfirm] = useState('');\n    const onCreate = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        reset();\n        const result = await mutateAsync({ password, confirm });\n        if (result === undefined) {\n            return afterCreate(password);\n        }\n        else {\n            setError(result);\n        }\n    };\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, [ref]);\n    return (_jsx(CenterContainer, { children: _jsxs(Block, { onSubmit: onCreate, children: [_jsx(H2, { children: t('Create_password') }), _jsx(Input, { ref: ref, type: \"password\", label: t('Password'), value: password, onChange: value => {\n                        setError(undefined);\n                        setPassword(value);\n                    }, isValid: error == null, helpText: error === 'confirm' ? t('PasswordDoNotMatch') : t('MinPassword') }), _jsx(Input, { type: \"password\", label: t('ConfirmPassword'), value: confirm, onChange: value => {\n                        setError(undefined);\n                        setConfirm(value);\n                    }, isValid: error !== 'confirm' }), _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, loading: isLoading || isCreating, disabled: isCreating || error != null, type: \"submit\", children: t('continue') })] }) }));\n};\nexport const CreateAuthState = ({ afterCreate, isLoading }) => {\n    const [authType, setAuthType] = useState('password');\n    const { mutateAsync: setNoneAuth, isLoading: isNoneLoading } = useSetNoneAuthMutation();\n    const onSelect = async (_authType) => {\n        if (_authType === 'none') {\n            await setNoneAuth();\n            afterCreate();\n        }\n        else {\n            setAuthType(_authType);\n        }\n    };\n    if (authType === undefined) {\n        return _jsx(SelectAuthType, { onSelect: onSelect, isLoading: isNoneLoading });\n    }\n    else if (authType === 'password') {\n        return _jsx(FillPassword, { afterCreate: afterCreate, isLoading: isLoading });\n    }\n    else {\n        return _jsx(_Fragment, { children: \"TODO: WithAuthn case \" });\n    }\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { getWalletState } from '@tonkeeper/core/dist/service/wallet/storeService';\nimport { updateWalletProperty } from '@tonkeeper/core/dist/service/walletService';\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { QueryKey } from '../../libs/queryKey';\nimport { CenterContainer } from '../Layout';\nimport { Body2, H2 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { Input } from '../fields/Input';\nimport { EmojisList } from '../shared/emoji/EmojisList';\nimport { WalletEmoji } from '../shared/emoji/WalletEmoji';\nconst Block = styled.form `\n    display: flex;\n    text-align: center;\n    gap: 1rem;\n    flex-direction: column;\n`;\nconst Body = styled(Body2) `\n    text-align: center;\n    color: ${props => props.theme.textSecondary};\n`;\nconst useUpdateNameMutation = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async ({ name, emoji, account }) => {\n        if (name.length < 3) {\n            throw new Error('Missing name');\n        }\n        if (!account.activePublicKey) {\n            throw new Error('Missing activePublicKey');\n        }\n        const wallet = await getWalletState(sdk.storage, account.activePublicKey);\n        if (!wallet) {\n            throw new Error('Missing wallet');\n        }\n        await updateWalletProperty(sdk.storage, wallet, { name, emoji });\n        await client.invalidateQueries([QueryKey.account]);\n        return account;\n    });\n};\nexport const UpdateWalletName = props => {\n    const { t } = useTranslation();\n    const ref = useRef(null);\n    const { mutateAsync, isError, isLoading, reset } = useUpdateNameMutation();\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, [ref.current]);\n    const [name, setName] = useState('');\n    const [emoji, setEmoji] = useState(props.walletEmoji);\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if ('submitHandler' in props) {\n            props.submitHandler({ name, emoji });\n        }\n        else {\n            props.onUpdate(await mutateAsync({ name, emoji, account: props.account }));\n        }\n    };\n    const onChange = (value) => {\n        reset();\n        setName(value);\n    };\n    return (_jsx(CenterContainer, { children: _jsxs(Block, { onSubmit: onSubmit, children: [_jsxs(\"div\", { children: [_jsx(H2, { children: t('Name_your_wallet') }), _jsx(Body, { children: t('Name_your_wallet_description') })] }), _jsx(Input, { ref: ref, value: name, onChange: onChange, label: t('Wallet_name'), disabled: isLoading, isValid: !isError, rightElement: emoji ? _jsx(WalletEmoji, { emoji: emoji }) : null }), _jsx(EmojisList, { keepShortListForMS: 500, onClick: setEmoji }), _jsx(Button, { size: \"large\", fullWidth: true, marginTop: true, primary: true, loading: isLoading, disabled: isLoading, type: \"submit\", children: t('add_edit_favorite_save') })] }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Lottie from 'react-lottie';\nimport animationCheckData from './Check.json';\nimport animationConfettiData from './Confetti.json';\nimport animationGearData from './Gear.json';\nimport animationWriteData from './Write.json';\nconst defaultCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationCheckData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const CheckLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultCheckOptions, height: 160, width: 160 });\n};\nconst defaultGearOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationGearData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const GearLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultGearOptions, height: 160, width: 160 });\n};\nconst defaultWriteOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationWriteData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const WriteLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultWriteOptions, height: 160, width: 160 });\n};\nconst defaultConfettiOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationConfettiData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const ConfettiLottieIcon = ({ width, height }) => {\n    return _jsx(Lottie, { options: defaultConfettiOptions, height: height, width: width });\n};\nexport const NotificationIcon = () => {\n    return (_jsxs(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"128\", height: \"128\", viewBox: \"0 0 128 128\", fill: \"none\", children: [_jsx(\"path\", { d: \"M107.965 41.8795C105.62 43.2285 102.9 44 100 44C91.1634 44 84 36.8366 84 28C84 25.1 84.7715 22.3802 86.1205 20.0347C84.1104 20 81.8262 20 79.2 20L48.8 20C38.7191 20 33.6786 20 29.8282 21.9619C26.4413 23.6876 23.6876 26.4413 21.9619 29.8282C20 33.6786 20 38.7191 20 48.8L20 79.2C20 89.2809 20 94.3214 21.9619 98.1718C23.6876 101.559 26.4413 104.312 29.8282 106.038C33.6786 108 38.7191 108 48.8 108H79.2C89.2809 108 94.3214 108 98.1718 106.038C101.559 104.312 104.312 101.559 106.038 98.1718C108 94.3214 108 89.2809 108 79.2V48.8C108 46.1738 108 43.8896 107.965 41.8795Z\", fill: \"#45AEF5\" }), _jsx(\"circle\", { opacity: \"0.32\", cx: \"100\", cy: \"28\", r: \"16\", fill: \"#45AEF5\" })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { mnemonicValidate } from '@ton/crypto';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { addWalletWithCustomAuthState, addWalletWithGlobalAuthState, getAccountState } from '@tonkeeper/core/dist/service/accountService';\nimport { createNewWalletState, encryptWalletMnemonic } from '@tonkeeper/core/dist/service/walletService';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { IconPage } from '../../components/Layout';\nimport { CheckLottieIcon, ConfettiLottieIcon } from '../../components/lottie/LottieIcons';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAfterImportAction, useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { QueryKey } from '../../libs/queryKey';\nimport { getPasswordByNotification } from '../../state/mnemonic';\nconst createWalletWithKeychain = async (client, config, api, sdk, mnemonic) => {\n    if (!sdk.keychain) {\n        throw new Error('Keychain is not define');\n    }\n    const state = await createNewWalletState(api, mnemonic, config);\n    state.auth = { kind: 'keychain' };\n    await sdk.keychain.setPassword(state.publicKey, mnemonic.join(' '));\n    await addWalletWithCustomAuthState(sdk.storage, state);\n    await client.invalidateQueries([QueryKey.account]);\n    return getAccountState(sdk.storage);\n};\nconst createWallet = async (client, config, api, sdk, mnemonic, auth, password) => {\n    const key = auth.kind === 'none' ? 'none' : password;\n    if (!key) {\n        throw new Error('Missing encrypt password key');\n    }\n    const state = await createNewWalletState(api, mnemonic, config);\n    const encryptedMnemonic = await encryptWalletMnemonic(mnemonic, key);\n    await addWalletWithGlobalAuthState(sdk.storage, state, auth, encryptedMnemonic);\n    await client.invalidateQueries([QueryKey.account]);\n    return getAccountState(sdk.storage);\n};\nexport const useAddWalletMutation = () => {\n    const sdk = useAppSdk();\n    const { api, config } = useAppContext();\n    const client = useQueryClient();\n    return useMutation(async ({ mnemonic, password, listOfAuth }) => {\n        const valid = await mnemonicValidate(mnemonic);\n        if (!valid) {\n            throw new Error('Mnemonic is not valid.');\n        }\n        if (listOfAuth && listOfAuth.length === 1 && listOfAuth[0] == 'keychain') {\n            return createWalletWithKeychain(client, config, api, sdk, mnemonic);\n        }\n        const auth = await sdk.storage.get(AppKey.GLOBAL_AUTH_STATE);\n        if (auth === null) {\n            return false;\n        }\n        const account = await getAccountState(sdk.storage);\n        if (account.publicKeys.length === 0 && password == undefined) {\n            return false;\n        }\n        if (auth.kind === 'none') {\n            return createWallet(client, config, api, sdk, mnemonic, auth);\n        }\n        if (!password) {\n            password = await getPasswordByNotification(sdk, auth);\n        }\n        return createWallet(client, config, api, sdk, mnemonic, auth, password);\n    });\n};\nconst ConfettiBlock = styled.div `\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 10;\n`;\nexport const FinalView = () => {\n    const { t } = useTranslation();\n    const afterImport = useAfterImportAction();\n    const client = useQueryClient();\n    const [size, setSize] = useState(undefined);\n    useEffect(() => {\n        client.invalidateQueries([]);\n        setTimeout(afterImport, 3000);\n    }, []);\n    useEffect(() => {\n        const { innerWidth: width, innerHeight: height } = window;\n        setSize({ width, height });\n    }, []);\n    return (_jsxs(_Fragment, { children: [size && (_jsx(ConfettiBlock, { children: _jsx(ConfettiLottieIcon, { ...size }) })), _jsx(IconPage, { icon: _jsx(CheckLottieIcon, {}), title: t('check_words_success') })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconPage } from '../../components/Layout';\nimport { Button } from '../../components/fields/Button';\nimport { NotificationIcon } from '../../components/lottie/LottieIcons';\nimport { useTranslation } from '../../hooks/translation';\nimport { signTonConnectMnemonicOver } from '../../state/mnemonic';\nimport { useSubscribeMutation } from '../../state/subscribe';\nexport const Subscribe = ({ wallet, mnemonic, onDone }) => {\n    const { t } = useTranslation();\n    const { mutate, reset, isLoading } = useSubscribeMutation(wallet, signTonConnectMnemonicOver(mnemonic), onDone);\n    return (_jsx(IconPage, { skip: onDone, icon: _jsx(NotificationIcon, {}), title: t('reminder_notifications_title'), description: t('reminder_notifications_caption'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, loading: isLoading, onClick: () => {\n                reset();\n                mutate();\n            }, children: t('reminder_notifications_enable_button') }) }));\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { useAppContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nexport const useSubscribeMutation = (wallet, signTonConnect, onDone) => {\n    const { api } = useAppContext();\n    const sdk = useAppSdk();\n    return useMutation(async () => {\n        const { notifications } = sdk;\n        if (!notifications) {\n            throw new Error('Missing notifications');\n        }\n        try {\n            await notifications.subscribe(api, wallet, signTonConnect);\n            onDone();\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                sdk.topMessage(e.message);\n            }\n            throw e;\n        }\n    });\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { mnemonicNew } from '@ton/crypto';\nimport { useEffect, useState } from 'react';\nimport { IconPage } from '../../components/Layout';\nimport { CreateAuthState } from '../../components/create/CreateAuth';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { Check, Worlds } from '../../components/create/Words';\nimport { Button } from '../../components/fields/Button';\nimport { CheckLottieIcon, GearLottieIcon, WriteLottieIcon } from '../../components/lottie/LottieIcons';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { useActiveWallet } from '../../state/wallet';\nimport { FinalView, useAddWalletMutation } from './Password';\nimport { Subscribe } from './Subscribe';\nconst Create = ({ listOfAuth }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { config } = useAppContext();\n    const { mutateAsync: checkPasswordAndCreateWalletAsync, isLoading: isConfirmLoading, reset } = useAddWalletMutation();\n    const { data: wallet } = useActiveWallet();\n    const [mnemonic, setMnemonic] = useState([]);\n    const [account, setAccount] = useState(undefined);\n    const [create, setCreate] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [check, setCheck] = useState(false);\n    const [checked, setChecked] = useState(false);\n    const [hasPassword, setHasPassword] = useState(false);\n    const [passNotifications, setPassNotification] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            mnemonicNew(24).then(value => setMnemonic(value));\n        }, 1500);\n    }, []);\n    useEffect(() => {\n        if (mnemonic.length) {\n            setTimeout(() => {\n                setCreate(true);\n            }, 1500);\n        }\n    }, [mnemonic]);\n    if (mnemonic.length === 0) {\n        return _jsx(IconPage, { icon: _jsx(GearLottieIcon, {}), title: t('create_wallet_generating') });\n    }\n    if (!create) {\n        return _jsx(IconPage, { icon: _jsx(CheckLottieIcon, {}), title: t('create_wallet_generated') });\n    }\n    if (!open) {\n        return (_jsx(IconPage, { logOut: true, icon: _jsx(WriteLottieIcon, {}), title: t('create_wallet_title'), description: t('create_wallet_caption'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, onClick: () => setOpen(true), children: t('continue') }) }));\n    }\n    if (!check) {\n        return (_jsx(Worlds, { mnemonic: mnemonic, onBack: () => setOpen(false), onCheck: () => setCheck(true) }));\n    }\n    if (!checked) {\n        return (_jsx(Check, { mnemonic: mnemonic, onBack: () => setCheck(false), onConfirm: () => checkPasswordAndCreateWalletAsync({ mnemonic, listOfAuth }).then(state => {\n                setChecked(true);\n                if (state === false) {\n                    setHasPassword(false);\n                }\n                else {\n                    setHasPassword(true);\n                    setAccount(state);\n                }\n            }), isLoading: isConfirmLoading }));\n    }\n    if (!hasPassword) {\n        return (_jsx(CreateAuthState, { afterCreate: (password) => {\n                reset();\n                checkPasswordAndCreateWalletAsync({ mnemonic, password }).then(state => {\n                    if (state !== false) {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            }, isLoading: isConfirmLoading }));\n    }\n    if (account && account.publicKeys.length > 1 && wallet && wallet.name == null) {\n        return (_jsx(UpdateWalletName, { account: account, onUpdate: setAccount, walletEmoji: wallet.emoji }));\n    }\n    if (sdk.notifications && !passNotifications) {\n        return (_jsx(Subscribe, { wallet: wallet, mnemonic: mnemonic, onDone: () => setPassNotification(true) }));\n    }\n    return _jsx(FinalView, {});\n};\nexport default Create;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { CreateAuthState } from '../../components/create/CreateAuth';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { ImportWords } from '../../components/create/Words';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useActiveWallet } from '../../state/wallet';\nimport { FinalView, useAddWalletMutation } from './Password';\nimport { Subscribe } from './Subscribe';\nconst Import = ({ listOfAuth }) => {\n    const sdk = useAppSdk();\n    const [mnemonic, setMnemonic] = useState([]);\n    const [account, setAccount] = useState(undefined);\n    const [hasPassword, setHasPassword] = useState(false);\n    const [passNotifications, setPassNotification] = useState(false);\n    const { data: wallet } = useActiveWallet();\n    const { mutateAsync: checkPasswordAndCreateWalletAsync, isLoading: isConfirmLoading, reset } = useAddWalletMutation();\n    if (mnemonic.length === 0) {\n        return (_jsx(ImportWords, { isLoading: isConfirmLoading, onMnemonic: m => {\n                checkPasswordAndCreateWalletAsync({ mnemonic: m, listOfAuth }).then(state => {\n                    setMnemonic(m);\n                    if (state === false) {\n                        setHasPassword(false);\n                    }\n                    else {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            } }));\n    }\n    if (!hasPassword) {\n        return (_jsx(CreateAuthState, { afterCreate: (password) => {\n                reset();\n                checkPasswordAndCreateWalletAsync({ mnemonic, password }).then(state => {\n                    if (state !== false) {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            }, isLoading: isConfirmLoading }));\n    }\n    if (account && account.publicKeys.length > 1 && wallet && wallet.name == null) {\n        return (_jsx(UpdateWalletName, { account: account, onUpdate: setAccount, walletEmoji: wallet.emoji }));\n    }\n    if (sdk.notifications && !passNotifications) {\n        return (_jsx(Subscribe, { wallet: wallet, mnemonic: mnemonic, onDone: () => setPassNotification(true) }));\n    }\n    return _jsx(FinalView, {});\n};\nexport default Import;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { IconPage } from '../../components/Layout';\nimport { KeystoneIcon } from '../../components/create/ImportIcons';\nimport { Button } from '../../components/fields/Button';\nimport { useKeystoneScanner } from '../../hooks/keystoneScanner';\nimport { useTranslation } from '../../hooks/translation';\nimport { usePairKeystoneMutation } from '../../state/keystone';\nconst IconBlock = styled.div `\n    color: ${props => props.theme.accentBlue};\n`;\nexport const PairKeystone = () => {\n    const { t } = useTranslation();\n    const { mutate, reset, isLoading } = usePairKeystoneMutation();\n    const onSubmit = useCallback((result) => {\n        reset();\n        mutate(result);\n    }, [reset, mutate]);\n    const openScanner = useKeystoneScanner(Date.now(), onSubmit);\n    return (_jsx(IconPage, { logOut: true, icon: _jsx(IconBlock, { children: _jsx(KeystoneIcon, { size: 144 }) }), title: t('keystone_pair_title'), description: t('keystone_pair_subtitle'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, loading: isLoading, marginTop: true, onClick: openScanner, children: t('scan_qr_title') }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Button } from '../../components/fields/Button';\nimport { useTranslation } from '../../hooks/translation';\nimport { useAddLedgerAccountsMutation, useConnectLedgerMutation, useLedgerAccounts } from '../../state/ledger';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Body2, H2 } from '../../components/Text';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { AppRoute } from '../../libs/routes';\nimport { useNativeBackButton } from '../../components/BackButton';\nimport { SpinnerIcon } from '../../components/Icon';\nimport { ListBlock, ListItem } from '../../components/List';\nimport { formatAddress } from '@tonkeeper/core/dist/utils/common';\nimport { formatter } from '../../hooks/balance';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { Checkbox } from '../../components/fields/Checkbox';\nimport { LedgerConnectionSteps } from '../../components/ledger/LedgerConnectionSteps';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { getFallbackWalletEmoji } from '@tonkeeper/core/dist/service/wallet/storeService';\nconst ConnectLedgerWrapper = styled.div `\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\nconst H2Styled = styled(H2) `\n    margin-bottom: 1rem;\n`;\nconst LedgerConnectionStepsStyled = styled(LedgerConnectionSteps) `\n    margin: 1rem 0;\n`;\nconst ButtonsBlock = styled.div `\n    margin-top: 1rem;\n    display: flex;\n    gap: 8px;\n    max-width: 368px;\n    width: 100%;\n\n    > * {\n        flex: 1;\n    }\n`;\nexport const PairLedger = () => {\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const sdk = useAppSdk();\n    const back = useCallback(() => navigate(AppRoute.home), [navigate]);\n    useNativeBackButton(sdk, back);\n    const [moveNext, setMoveNext] = useState(false);\n    const { isDeviceConnected, mutate: connectLedger, isLoading: isLedgerConnecting, reset: resetConnection, data: tonTransport } = useConnectLedgerMutation();\n    const onStartConnection = useCallback(() => {\n        resetConnection();\n        connectLedger();\n    }, []);\n    useEffect(() => {\n        onStartConnection();\n        return resetConnection;\n    }, []);\n    useEffect(() => {\n        if (tonTransport) {\n            setTimeout(() => setMoveNext(true), 500);\n        }\n    }, [tonTransport]);\n    if (moveNext) {\n        return _jsx(ChooseLedgerAccounts, { onCancel: back, tonTransport: tonTransport });\n    }\n    let currentStep = 'connect';\n    if (isDeviceConnected) {\n        currentStep = 'open-ton';\n    }\n    if (tonTransport) {\n        currentStep = 'all-completed';\n    }\n    return (_jsxs(ConnectLedgerWrapper, { children: [_jsx(H2Styled, { children: t('ledger_connect_header') }), _jsx(LedgerConnectionStepsStyled, { currentStep: currentStep }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { secondary: true, onClick: back, children: t('cancel') }), _jsx(Button, { primary: true, loading: isLedgerConnecting || !!tonTransport, onClick: onStartConnection, children: t('try_again') })] })] }));\n};\nconst AccountsListWrapper = styled.div `\n    width: 100%;\n    max-width: 368px;\n`;\nconst AccountsLoadingWrapper = styled.div `\n    height: 549px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ListItemStyled = styled(ListItem) `\n    padding: 16px 12px;\n    font-family: ${props => props.theme.fontMono};\n\n    &:not(:first-child) {\n        border-top: 1px solid ${props => props.theme.separatorCommon};\n    }\n`;\nconst Dot = styled(Body2) `\n    color: ${props => props.theme.textTertiary};\n`;\nconst Body2Secondary = styled(Body2) `\n    color: ${props => props.theme.textSecondary};\n`;\nconst CheckboxStyled = styled(Checkbox) `\n    margin-left: auto;\n    border-top: none !important;\n    padding-top: 0 !important;\n`;\nconst ChooseLedgerAccounts = ({ tonTransport, onCancel }) => {\n    const { t } = useTranslation();\n    const totalAccounts = 10;\n    const { mutate: getLedgerAccounts, data: ledgerAccounts } = useLedgerAccounts(totalAccounts);\n    const [selectedIndexes, setSelectedIndexes] = useState({});\n    const { mutate: addAccountsMutation, isLoading: isAdding } = useAddLedgerAccountsMutation();\n    const [accountsToAdd, setAccountsToAdd] = useState();\n    useEffect(() => {\n        getLedgerAccounts(tonTransport);\n    }, [tonTransport]);\n    const chosenSomeAccounts = !!Object.values(selectedIndexes).filter(Boolean).length;\n    const toFormattedAddress = (address) => {\n        const userFriendlyAddress = formatAddress(address);\n        return `${userFriendlyAddress.slice(0, 8)}...${userFriendlyAddress.slice(-8)}`;\n    };\n    const toFormattedBalance = (weiBalance) => {\n        return formatter.format(shiftedDecimals(weiBalance, 9));\n    };\n    const onAdd = () => {\n        const chosenIndexes = Object.entries(selectedIndexes)\n            .filter(([, v]) => v)\n            .map(([k]) => Number(k));\n        setAccountsToAdd(ledgerAccounts.filter(account => chosenIndexes.includes(account.accountIndex)));\n    };\n    if (accountsToAdd) {\n        const fallbackEmoji = getFallbackWalletEmoji(accountsToAdd[0].publicKey.toString('hex'));\n        return (_jsx(UpdateWalletName, { walletEmoji: fallbackEmoji, submitHandler: ({ name, emoji }) => addAccountsMutation({ name, emoji, accounts: accountsToAdd }) }));\n    }\n    return (_jsxs(ConnectLedgerWrapper, { children: [_jsx(H2Styled, { children: t('ledger_choose_wallets') }), _jsx(AccountsListWrapper, { children: !ledgerAccounts ? (_jsx(AccountsLoadingWrapper, { children: _jsx(SpinnerIcon, {}) })) : (_jsx(ListBlock, { margin: false, children: ledgerAccounts.map(account => (_jsxs(ListItemStyled, { hover: false, children: [_jsx(Body2, { children: toFormattedAddress(account.address) }), \"\\u00A0\", _jsx(Dot, { children: \"\\u00B7\" }), \"\\u00A0\", _jsxs(Body2Secondary, { children: [toFormattedBalance(account.balance), \"\\u00A0TON\"] }), _jsx(CheckboxStyled, { checked: selectedIndexes[account.accountIndex], onChange: () => setSelectedIndexes(s => ({\n                                    ...s,\n                                    [account.accountIndex]: !s[account.accountIndex]\n                                })) })] }, account.accountIndex))) })) }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { secondary: true, onClick: onCancel, children: t('cancel') }), _jsx(Button, { primary: true, loading: !ledgerAccounts || isAdding, disabled: !chosenSomeAccounts, onClick: onAdd, children: t('continue') })] })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { IconPage } from '../../components/Layout';\nimport { SignerIcon } from '../../components/create/ImportIcons';\nimport { Button } from '../../components/fields/Button';\nimport { useScanner } from '../../hooks/scanner';\nimport { useTranslation } from '../../hooks/translation';\nimport { usePairSignerMutation } from '../../state/signer';\nconst IconBlock = styled.div `\n    color: ${props => props.theme.accentBlue};\n`;\nexport const PairSigner = () => {\n    const { t } = useTranslation();\n    const { mutate, reset, isLoading } = usePairSignerMutation();\n    const onSubmit = useCallback((result) => {\n        reset();\n        mutate(result);\n    }, [reset, mutate]);\n    const openScanner = useScanner(Date.now(), onSubmit);\n    return (_jsx(IconPage, { logOut: true, icon: _jsx(IconBlock, { children: _jsx(SignerIcon, { size: 144 }) }), title: t('import_signer'), description: t('import_signer_description'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, loading: isLoading, marginTop: true, onClick: openScanner, children: t('scan_qr_title') }) }));\n};\n","import { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addWalletWithCustomAuthState } from '@tonkeeper/core/dist/service/accountService';\nimport { walletStateFromSignerQr } from '@tonkeeper/core/dist/service/walletService';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nimport { QueryKey } from '../libs/queryKey';\nimport { AppRoute } from '../libs/routes';\nexport const usePairSignerMutation = () => {\n    const sdk = useAppSdk();\n    const { api, config } = useAppContext();\n    const client = useQueryClient();\n    const navigate = useNavigate();\n    return useMutation(async (qrCode) => {\n        try {\n            const state = await walletStateFromSignerQr(api, qrCode, config);\n            await addWalletWithCustomAuthState(sdk.storage, state);\n            await client.invalidateQueries([QueryKey.account]);\n            navigate(AppRoute.home);\n        }\n        catch (e) {\n            if (e instanceof Error)\n                sdk.alert(e.message);\n            throw e;\n        }\n    });\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useAppSdk } from './appSdk';\nexport const useScanner = (initScan, onSubmit) => {\n    const sdk = useAppSdk();\n    const [scanId, setScanId] = useState(initScan);\n    useEffect(() => {\n        if (scanId) {\n            sdk.uiEvents.emit('scan', {\n                method: 'scan',\n                id: scanId,\n                params: undefined\n            });\n        }\n    }, [scanId]);\n    useEffect(() => {\n        const handler = (options) => {\n            if (options.id === scanId) {\n                onSubmit(options.params);\n            }\n        };\n        sdk.uiEvents.on('response', handler);\n        return () => {\n            sdk.uiEvents.off('response', handler);\n        };\n    }, [sdk, scanId, onSubmit]);\n    return useCallback(() => {\n        setScanId(Date.now());\n    }, [setScanId]);\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Route, Routes } from 'react-router-dom';\nimport { ImportRoute } from '../../libs/routes';\nimport Create from './Create';\nimport Import from './Import';\nimport { PairKeystone } from './Keystone';\nimport { PairLedger } from './Ledger';\nimport { PairSigner } from './Signer';\nconst ImportRouter = ({ listOfAuth }) => {\n    return (_jsxs(Routes, { children: [_jsx(Route, { path: ImportRoute.create, element: _jsx(Create, { listOfAuth: listOfAuth }) }), _jsx(Route, { path: ImportRoute.import, element: _jsx(Import, { listOfAuth: listOfAuth }) }), _jsx(Route, { path: ImportRoute.signer, element: _jsx(PairSigner, {}) }), _jsx(Route, { path: ImportRoute.keystone, element: _jsx(PairKeystone, {}) }), _jsx(Route, { path: ImportRoute.ledger, element: _jsx(PairLedger, {}) })] }));\n};\nexport default ImportRouter;\n","\nexport class InvalidSchemeError extends Error {\n  constructor() {\n    super('Invalid Scheme');\n    this.name = 'InvalidSchemeError'\n  }\n}\n\nexport class InvalidPathLengthError extends Error {\n  constructor() {\n    super('Invalid Path');\n    this.name = 'InvalidPathLengthError'\n  }\n}\n\nexport class InvalidTypeError extends Error {\n  constructor() {\n    super('Invalid Type');\n    this.name = 'InvalidTypeError'\n  }\n}\n\nexport class InvalidSequenceComponentError extends Error {\n  constructor() {\n    super('Invalid Sequence Component');\n    this.name = 'InvalidSequenceComponentError'\n  }\n}\n\nexport class InvalidChecksumError extends Error {\n  constructor() {\n    super('Invalid Checksum');\n    this.name = 'InvalidChecksumError'\n  }\n}\n","import { arrayContains, arraysEqual, bufferXOR, getCRC, setDifference, split } from \"./utils\";\nimport { chooseFragments } from \"./fountainUtils\";\nimport { FountainEncoderPart } from \"./fountainEncoder\";\nimport { InvalidChecksumError } from \"./errors\";\n\nexport class FountainDecoderPart {\n  constructor(\n    private _indexes: number[],\n    private _fragment: Buffer\n  ) { }\n\n  get indexes() { return this._indexes; }\n  get fragment() { return this._fragment; }\n\n  public static fromEncoderPart(encoderPart: FountainEncoderPart) {\n    const indexes = chooseFragments(encoderPart.seqNum, encoderPart.seqLength, encoderPart.checksum);\n    const fragment = encoderPart.fragment;\n\n    return new FountainDecoderPart(indexes, fragment);\n  }\n\n  public isSimple() {\n    return this.indexes.length === 1;\n  }\n}\n\ntype PartIndexes = number[];\ninterface PartDict {\n  key: PartIndexes;\n  value: FountainDecoderPart;\n}\n\nexport default class FountainDecoder {\n  private error: Error | undefined;\n  private result: Buffer | undefined = undefined;\n  private expectedMessageLength: number = 0;\n  private expectedChecksum: number = 0;\n  private expectedFragmentLength: number = 0;\n  private processedPartsCount: number = 0;\n  private expectedPartIndexes: PartIndexes = [];\n  private lastPartIndexes: PartIndexes = [];\n  private queuedParts: FountainDecoderPart[] = [];\n  private receivedPartIndexes: PartIndexes = [];\n  private mixedParts: PartDict[] = [];\n  private simpleParts: PartDict[] = [];\n\n\n  private validatePart(part: FountainEncoderPart) {\n    // If this is the first part we've seen\n    if (this.expectedPartIndexes.length === 0) {\n      // Record the things that all the other parts we see will have to match to be valid.\n      [...new Array(part.seqLength)]\n        .forEach((_, index) => this.expectedPartIndexes.push(index));\n\n      this.expectedMessageLength = part.messageLength;\n      this.expectedChecksum = part.checksum;\n      this.expectedFragmentLength = part.fragment.length;\n    }\n    else {\n      // If this part's values don't match the first part's values, throw away the part\n      if (this.expectedPartIndexes.length !== part.seqLength) {\n        return false;\n      }\n      if (this.expectedMessageLength !== part.messageLength) {\n        return false;\n      }\n      if (this.expectedChecksum !== part.checksum) {\n        return false;\n      }\n      if (this.expectedFragmentLength !== part.fragment.length) {\n        return false;\n      }\n    }\n\n    // This part should be processed\n    return true;\n  }\n\n  private reducePartByPart(a: FountainDecoderPart, b: FountainDecoderPart): FountainDecoderPart {\n    // If the fragments mixed into `b` are a strict (proper) subset of those in `a`...\n    if (arrayContains(a.indexes, b.indexes)) {\n      const newIndexes = setDifference(a.indexes, b.indexes);\n      const newFragment = bufferXOR(a.fragment, b.fragment);\n\n      return new FountainDecoderPart(newIndexes, newFragment);\n    } else {\n      // `a` is not reducable by `b`, so return a\n      return a;\n    }\n  }\n\n  private reduceMixedBy(part: FountainDecoderPart): void {\n    const newMixed: PartDict[] = [];\n\n    this.mixedParts\n      .map(({ value: mixedPart }) => this.reducePartByPart(mixedPart, part))\n      .forEach(reducedPart => {\n        if (reducedPart.isSimple()) {\n          this.queuedParts.push(reducedPart)\n        } else {\n          newMixed.push({ key: reducedPart.indexes, value: reducedPart })\n        }\n      })\n\n    this.mixedParts = newMixed;\n  }\n\n  private processSimplePart(part: FountainDecoderPart): void {\n    // Don't process duplicate parts\n    const fragmentIndex = part.indexes[0]\n\n    if (this.receivedPartIndexes.includes(fragmentIndex)) {\n      return;\n    }\n\n    this.simpleParts.push({ key: part.indexes, value: part });\n    this.receivedPartIndexes.push(fragmentIndex);\n\n    // If we've received all the parts\n    if (arraysEqual(this.receivedPartIndexes, this.expectedPartIndexes)) {\n      // Reassemble the message from its fragments\n      const sortedParts = this.simpleParts\n        .map(({ value }) => value)\n        .sort((a, b) => (a.indexes[0] - b.indexes[0]))\n      const message = FountainDecoder.joinFragments(sortedParts.map(part => part.fragment), this.expectedMessageLength)\n      const checksum = getCRC(message);\n\n      if (checksum === this.expectedChecksum) {\n        this.result = message;\n      } else {\n        this.error = new InvalidChecksumError();\n      }\n    }\n    else {\n      this.reduceMixedBy(part);\n    }\n  }\n\n  private processMixedPart(part: FountainDecoderPart): void {\n    // Don't process duplicate parts\n    if (this.mixedParts.some(({ key: indexes }) => arraysEqual(indexes, part.indexes))) {\n      return;\n    }\n\n    // Reduce this part by all the others\n    let p2 = this.simpleParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), part)\n    p2 = this.mixedParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), p2)\n\n    // If the part is now simple\n    if (p2.isSimple()) {\n      // Add it to the queue\n      this.queuedParts.push(p2);\n    } else {\n      this.reduceMixedBy(p2);\n\n      this.mixedParts.push({ key: p2.indexes, value: p2 });\n    }\n  }\n\n  private processQueuedItem(): void {\n    if (this.queuedParts.length === 0) {\n      return;\n    }\n\n    const part = this.queuedParts.shift()!;\n\n    if (part.isSimple()) {\n      this.processSimplePart(part);\n    } else {\n      this.processMixedPart(part);\n    }\n  }\n\n  public static joinFragments = (fragments: Buffer[], messageLength: number) => {\n    return Buffer.concat(fragments).slice(0, messageLength)\n  }\n\n  public receivePart(encoderPart: FountainEncoderPart): boolean {\n    if (this.isComplete()) {\n      return false;\n    }\n\n    if (!this.validatePart(encoderPart)) {\n      return false;\n    }\n\n    const decoderPart = FountainDecoderPart.fromEncoderPart(encoderPart);\n\n    this.lastPartIndexes = decoderPart.indexes;\n    this.queuedParts.push(decoderPart);\n\n    while (!this.isComplete() && this.queuedParts.length > 0) {\n      this.processQueuedItem();\n    };\n\n    this.processedPartsCount += 1;\n\n    return true;\n  }\n\n  public isComplete() {\n    return Boolean(this.result !== undefined && this.result.length > 0);\n  }\n\n  public isSuccess() {\n    return Boolean(this.error === undefined && this.isComplete());\n  }\n\n  public resultMessage(): Buffer {\n    return this.isSuccess() ? this.result! : Buffer.from([]);\n  }\n\n  public isFailure() {\n    return this.error !== undefined;\n  }\n\n  public resultError() {\n    return this.error ? this.error.message : '';\n  }\n\n  public expectedPartCount(): number {\n    return this.expectedPartIndexes.length;\n  }\n\n  public getExpectedPartIndexes(): PartIndexes {\n    return [...this.expectedPartIndexes]\n  }\n\n  public getReceivedPartIndexes(): PartIndexes {\n    return [...this.receivedPartIndexes]\n  }\n\n  public getLastPartIndexes(): PartIndexes {\n    return [...this.lastPartIndexes]\n  }\n\n  public estimatedPercentComplete(): number {\n    if (this.isComplete()) {\n      return 1;\n    }\n\n    const expectedPartCount = this.expectedPartCount();\n\n    if (expectedPartCount === 0) {\n      return 0;\n    }\n\n    // We multiply the expectedPartCount by `1.75` as a way to compensate for the facet\n    // that `this.processedPartsCount` also tracks the duplicate parts that have been\n    // processeed.\n    return Math.min(0.99, this.processedPartsCount / (expectedPartCount * 1.75));\n  }\n\n  public getProgress(): number {\n    if (this.isComplete()) {\n      return 1;\n    }\n\n    const expectedPartCount = this.expectedPartCount();\n\n    if (expectedPartCount === 0) {\n      return 0;\n    }\n\n    return this.receivedPartIndexes.length / expectedPartCount;\n  }\n}\n\n","import { InvalidTypeError } from \"./errors\";\nimport { isURType } from \"./utils\";\nimport { cborEncode, cborDecode } from './cbor';\n\nexport default class UR {\n  constructor(\n    private _cborPayload: Buffer,\n    private _type: string = 'bytes'\n  ) {\n    if (!isURType(this._type)) {\n      throw new InvalidTypeError();\n    }\n  }\n\n  public static fromBuffer(buf: Buffer) {\n    return new UR(cborEncode(buf));\n  }\n\n  public static from(value: any, encoding?: BufferEncoding) {\n    return UR.fromBuffer(Buffer.from(value, encoding));\n  }\n\n  public decodeCBOR(): Buffer {\n    return cborDecode(this._cborPayload);\n  }\n\n  get type() { return this._type; }\n  get cbor() { return this._cborPayload; }\n\n  public equals(ur2: UR) {\n    return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n  }\n}","import FountainDecoder from './fountainDecoder';\nimport bytewords from './bytewords';\nimport assert from 'assert';\nimport { isURType, toUint32 } from './utils';\nimport { InvalidSchemeError, InvalidPathLengthError, InvalidTypeError, InvalidSequenceComponentError } from './errors';\nimport UR from './ur';\nimport { FountainEncoderPart } from './fountainEncoder';\n\nexport default class URDecoder {\n  private expected_type: string;\n  private result: UR | undefined;\n  private error: Error | undefined;\n\n  constructor(\n    private fountainDecoder: FountainDecoder = new FountainDecoder(),\n    public type: string = 'bytes'\n  ) {\n    assert(isURType(type), 'Invalid UR type');\n\n    this.expected_type = '';\n  }\n\n  private static decodeBody(type: string, message: string): UR {\n    const cbor = bytewords.decode(message, bytewords.STYLES.MINIMAL);\n\n    return new UR(Buffer.from(cbor, 'hex'), type);\n  }\n\n  private validatePart(type: string): boolean {\n    if (this.expected_type) {\n      return this.expected_type === type;\n    }\n\n    if (!isURType(type)) {\n      return false;\n    }\n\n    this.expected_type = type;\n\n    return true;\n  }\n\n  public static decode(message: string): UR {\n    const [type, components] = this.parse(message);\n\n    if (components.length === 0) {\n      throw new InvalidPathLengthError();\n    }\n\n    const body = components[0];\n\n    return URDecoder.decodeBody(type, body);\n  }\n\n  public static parse(message: string): [string, string[]] {\n    const lowercase = message.toLowerCase();\n    const prefix = lowercase.slice(0, 3);\n\n    if (prefix !== 'ur:') {\n      throw new InvalidSchemeError();\n    }\n\n    const components = lowercase.slice(3).split('/')\n    const type = components[0];\n\n    if (components.length < 2) {\n      throw new InvalidPathLengthError();\n    }\n\n    if (!isURType(type)) {\n      throw new InvalidTypeError();\n    }\n\n    return [type, components.slice(1)]\n  }\n\n  public static parseSequenceComponent(s: string) {\n    const components = s.split('-');\n\n    if (components.length !== 2) {\n      throw new InvalidSequenceComponentError();\n    }\n\n    const seqNum = toUint32(Number(components[0]));\n    const seqLength = Number(components[1]);\n\n    if (seqNum < 1 || seqLength < 1) {\n      throw new InvalidSequenceComponentError();\n    }\n\n    return [seqNum, seqLength];\n  }\n\n  public receivePart(s: string): boolean {\n    if (this.result !== undefined) {\n      return false;\n    }\n\n    const [type, components] = URDecoder.parse(s)\n\n    if (!this.validatePart(type)) {\n      return false;\n    }\n\n    // If this is a single-part UR then we're done\n    if (components.length === 1) {\n      this.result = URDecoder.decodeBody(type, components[0])\n\n      return true;\n    }\n\n    if (components.length !== 2) {\n      throw new InvalidPathLengthError();\n    }\n\n    const [seq, fragment] = components;\n    const [seqNum, seqLength] = URDecoder.parseSequenceComponent(seq);\n    const cbor = bytewords.decode(fragment, bytewords.STYLES.MINIMAL);\n    const part = FountainEncoderPart.fromCBOR(cbor);\n\n    if (seqNum !== part.seqNum || seqLength !== part.seqLength) {\n      return false;\n    }\n\n    if (!this.fountainDecoder.receivePart(part)) {\n      return false;\n    }\n\n    if (this.fountainDecoder.isSuccess()) {\n      this.result = new UR(this.fountainDecoder.resultMessage(), type);\n    }\n    else if (this.fountainDecoder.isFailure()) {\n      this.error = new InvalidSchemeError();\n    }\n\n    return true;\n  }\n\n  public resultUR(): UR {\n    return this.result ? this.result : new UR(Buffer.from([]));\n  }\n\n  public isComplete(): boolean {\n    return this.result && this.result.cbor.length > 0;\n  }\n\n  public isSuccess(): boolean {\n    return !this.error && this.isComplete();\n  }\n\n  public isError(): boolean {\n    return this.error !== undefined;\n  }\n\n  public resultError() {\n    return this.error ? this.error.message : '';\n  }\n\n  public expectedPartCount() {\n    return this.fountainDecoder.expectedPartCount();\n  }\n\n  public expectedPartIndexes() {\n    return this.fountainDecoder.getExpectedPartIndexes();\n  }\n\n  public receivedPartIndexes() {\n    return this.fountainDecoder.getReceivedPartIndexes();\n  }\n\n  public lastPartIndexes() {\n    return this.fountainDecoder.getLastPartIndexes();\n  }\n\n  public estimatedPercentComplete() {\n    return this.fountainDecoder.estimatedPercentComplete();\n  }\n\n  public getProgress() {\n    return this.fountainDecoder.getProgress();\n  }\n}"],"names":["useKeystoneScanner","initScan","onSubmit","sdk","useAppSdk","scanId","setScanId","useState","urDecoder","useMemo","URDecoder","requestQrCode","useCallback","uiEvents","emit","method","id","params","undefined","useEffect","handler","options","receivePart","isComplete","resultUR","on","off","Date","now","Block","styled","form","_templateObject","_taggedTemplateLiteral","SelectAuthType","_ref","onSelect","isLoading","t","useTranslation","_jsxs","children","_jsx","Button","size","fullWidth","onClick","loading","primary","disabled","FillPassword","_ref3","afterCreate","mutateAsync","isCreating","reset","useCreatePassword","useMutation","async","password","confirm","_ref2","length","MinPasswordLength","hapticNotification","storage","set","AppKey","GLOBAL_AUTH_STATE","kind","ref","useRef","error","setError","setPassword","setConfirm","current","focus","CenterContainer","e","stopPropagation","preventDefault","result","H2","Input","type","label","value","onChange","isValid","helpText","marginTop","CreateAuthState","_ref4","authType","setAuthType","setNoneAuth","isNoneLoading","useSetNoneAuthMutation","_authType","_Fragment","Body","Body2","_templateObject2","props","theme","textSecondary","UpdateWalletName","isError","useUpdateNameMutation","client","useQueryClient","name","emoji","account","Error","activePublicKey","wallet","getWalletState","updateWalletProperty","invalidateQueries","QueryKey","setName","setEmoji","walletEmoji","submitHandler","onUpdate","rightElement","WalletEmoji","EmojisList","keepShortListForMS","defaultCheckOptions","loop","autoplay","animationData","animationCheckData","rendererSettings","preserveAspectRatio","CheckLottieIcon","Lottie","height","width","defaultGearOptions","animationGearData","GearLottieIcon","defaultWriteOptions","animationWriteData","WriteLottieIcon","defaultConfettiOptions","animationConfettiData","ConfettiLottieIcon","NotificationIcon","xmlns","viewBox","fill","d","opacity","cx","cy","r","createWallet","config","api","mnemonic","auth","key","state","createNewWalletState","encryptedMnemonic","encryptWalletMnemonic","addWalletWithGlobalAuthState","getAccountState","useAddWalletMutation","useAppContext","listOfAuth","mnemonicValidate","keychain","publicKey","join","addWalletWithCustomAuthState","createWalletWithKeychain","get","publicKeys","getPasswordByNotification","ConfettiBlock","div","FinalView","afterImport","useAfterImportAction","setSize","setTimeout","innerWidth","innerHeight","window","IconPage","icon","title","Subscribe","onDone","mutate","useSubscribeMutation","signTonConnect","notifications","subscribe","topMessage","message","signTonConnectMnemonicOver","skip","description","button","checkPasswordAndCreateWalletAsync","isConfirmLoading","data","useActiveWallet","setMnemonic","setAccount","create","setCreate","open","setOpen","check","setCheck","checked","setChecked","hasPassword","setHasPassword","passNotifications","setPassNotification","mnemonicNew","then","Check","onBack","onConfirm","Worlds","onCheck","logOut","ImportWords","onMnemonic","m","IconBlock","accentBlue","PairKeystone","usePairKeystoneMutation","openScanner","KeystoneIcon","ConnectLedgerWrapper","H2Styled","LedgerConnectionStepsStyled","LedgerConnectionSteps","_templateObject3","ButtonsBlock","_templateObject4","PairLedger","navigate","useNavigate","back","AppRoute","home","useNativeBackButton","moveNext","setMoveNext","isDeviceConnected","connectLedger","isLedgerConnecting","resetConnection","tonTransport","useConnectLedgerMutation","onStartConnection","ChooseLedgerAccounts","onCancel","currentStep","secondary","AccountsListWrapper","_templateObject5","AccountsLoadingWrapper","_templateObject6","ListItemStyled","ListItem","_templateObject7","fontMono","separatorCommon","Dot","_templateObject8","textTertiary","Body2Secondary","_templateObject9","CheckboxStyled","Checkbox","_templateObject10","getLedgerAccounts","ledgerAccounts","useLedgerAccounts","selectedIndexes","setSelectedIndexes","addAccountsMutation","isAdding","useAddLedgerAccountsMutation","accountsToAdd","setAccountsToAdd","chosenSomeAccounts","Object","values","filter","Boolean","toFormattedAddress","address","userFriendlyAddress","formatAddress","concat","slice","fallbackEmoji","getFallbackWalletEmoji","toString","accounts","ListBlock","margin","map","hover","weiBalance","balance","formatter","format","shiftedDecimals","accountIndex","s","SpinnerIcon","onAdd","chosenIndexes","entries","v","k","Number","includes","PairSigner","usePairSignerMutation","walletStateFromSignerQr","qrCode","alert","useScanner","SignerIcon","Routes","Route","path","ImportRoute","element","Create","import","Import","signer","keystone","ledger","InvalidSchemeError","constructor","super","this","exports","InvalidPathLengthError","InvalidTypeError","InvalidSequenceComponentError","InvalidChecksumError","utils_1","require","fountainUtils_1","errors_1","FountainDecoderPart","_indexes","_fragment","indexes","fragment","fromEncoderPart","encoderPart","chooseFragments","seqNum","seqLength","checksum","isSimple","FountainDecoder","expectedMessageLength","expectedChecksum","expectedFragmentLength","processedPartsCount","expectedPartIndexes","lastPartIndexes","queuedParts","receivedPartIndexes","mixedParts","simpleParts","validatePart","part","Array","forEach","_","index","push","messageLength","reducePartByPart","a","b","arrayContains","newIndexes","setDifference","newFragment","bufferXOR","reduceMixedBy","newMixed","mixedPart","reducedPart","processSimplePart","fragmentIndex","arraysEqual","sortedParts","sort","joinFragments","getCRC","processMixedPart","some","p2","reduce","acc","p","_ref5","processQueuedItem","shift","decoderPart","isSuccess","resultMessage","Buffer","from","isFailure","resultError","expectedPartCount","getExpectedPartIndexes","getReceivedPartIndexes","getLastPartIndexes","estimatedPercentComplete","Math","min","getProgress","fragments","cbor_1","UR","_cborPayload","_type","arguments","isURType","fromBuffer","buf","cborEncode","encoding","decodeCBOR","cborDecode","cbor","equals","ur2","fountainDecoder_1","__importDefault","bytewords_1","assert_1","ur_1","fountainEncoder_1","fountainDecoder","default","expected_type","decodeBody","decode","STYLES","MINIMAL","components","parse","body","lowercase","toLowerCase","split","parseSequenceComponent","toUint32","seq","FountainEncoderPart","fromCBOR"],"sourceRoot":""}